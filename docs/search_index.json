[["index.html", "DH in AAS - TA with R (2022S) Syllabus Course Details 0.1 Aims, Contents and Method of the Course 0.2 Course Evaluation 0.3 Class Participation 0.4 Homework 0.5 Final Project 0.6 Practice Worksheets (R Notebooks) 0.7 Additional Study Materials 0.8 Software, Tools, &amp; Technologies: 0.9 Submitting Homework: 0.10 Schedule 0.11 Lesson Topics (subject to modifications)", " DH in AAS - TA with R (2022S) Maxim G. Romanov 2022-06-10 Syllabus Course Details Course: 57-528 ONLINE S: Digital Humanities in African and Asian Studies: Text Analysis with R (2022S) / 57-528 ONLINE S: Digitale Geisteswissenschaften in den Afrika-Asien-Studien: Textanalyse mit R Language of instruction: English Meeting time: Fr 12:00-14:00 Additional meeting time: we will need to find a time slot when you can all join and work on your HW assignments together Meeting place: due to COVID, all meetings will be held online via Zoom Meeting link: shared via Slack; other details are available via STiNE Office hours: Fr 14:00-15:00 (on Zoom); if you have any questions, please, post them on Slack Instructor: Dr. Maxim Romanov, maxim.romanov@uni-hamburg.de 0.1 Aims, Contents and Method of the Course The course will offer a practical introduction into R programming language, which is currently one of the most popular choices of humanists interested in investigating humanities problems with computational methods. The focus of the course is text analysis. The course will have three main parts: first, you will be introduced to the basics of R; second, you will learn about main text analysis methods; third, you will work on your own text analysis project. The language of the course is English. Personal computers are required both for in-class work and for your homework (running full versions of either Windows, MacOS, or Linux; unfortunately, neither tablets nor Chrome-based laptops are suitable for this course). No prior programming experience is required, but familiarity with the command line and basic principles of programming will be beneficial. 0.2 Course Evaluation Course evaluation will be a combination of: in-class participation (30%), weekly homework workbooks (25%), DataCamp courses (25%), and the final project (20%). Final projects can be prepared either individually or in groups. 0.2.1 DataCamp This class is supported by DataCamp, the most intuitive learning platform for data science and analytics. Learn any time, anywhere and become an expert in R, Python, SQL, and more. DataCamp’s learn-by-doing methodology combines short expert videos and hands-on-the-keyboard exercises to help learners retain knowledge. DataCamp offers 350+ courses by expert instructors on topics such as importing data, data visualization, and machine learning. They’re constantly expanding their curriculum to keep up with the latest technology trends and to provide the best learning experience for all skill levels. Join over 6 million learners around the world and close your skills gap. You should all get access to DataCamp for the durations of the semester. If you cannot access it, please, contact me as soon as possible. DataCamp 0.3 Class Participation Each class session will consist in large part of practical hands-on exercises led by the instructor. BRING YOUR LAPTOP! We will accommodate whatever operating system you use (Windows, Mac, Linux), but it should be a laptop rather than a tablet. Don’t forget that asking for help counts as participation! 0.4 Homework Just as in research and real life, collaboration is a very good way to learn and is therefore encouraged. If you need help with any assignment, you are welcome to ask a fellow student. If you do work together on homework assignments, then when you submit it please include a brief note (just a sentence or two) to indicate who did what. NB: On submitting homework, see below. 0.5 Final Project Final project will be discussed later. You will have an option to build on what we will be doing in class, but you are most encouraged to pick a topic of your own. The best option will be to work on something relevant to your field of study, your term paper or your thesis. 0.6 Practice Worksheets (R Notebooks) 01_worksheets_familiar-with-r.Rmd.zip 02_worksheets_data-structures.Rmd.zip 03_worksheets_data-manipulation-introduction.Rmd.zip 04_worksheets_data-manipulation-continued.Rmd.zip 05_worksheets_ggplot2-introduction-MGR-mod.Rmd.zip 06_worksheets_functions.Rmd.zip NB: Worksheets 1-6 have been developed by Lincoln Mullen. Source: Lincoln A. Mullen, Computational Historical Thinking: With Applications in R (2018–): http://dh-r.lincolnmullen.com. 0.7 Additional Study Materials Silge, Julia, and David Robinson. Text Mining with R: a Tidy Approach https://www.tidytextmining.com/ Jockers, Matthew L. Text Analysis with R for Students of Literature. New York: Springer, 2014 (shared via Slack) Arnold, Taylor, and Lauren Tilton. Humanities Data in R. New York, NY: Springer Science+Business Media, 2015 (shared via Slack) Healy, Kieran. Data Visualization: A Practical Guide. Princeton University Press, 2018. ISBN: 978-0691181622. http://socviz.co/ Hadley Wickham &amp; Garrett Grolemund, R for Data Science: Import, Tidy, Transform, Visualize, and Model Data. O’Reilly, 2017. ISBN: 978-1491910399. https://r4ds.had.co.nz/ Wickham, Hadley. Advanced R, Second Edition. 2 edition. Boca Raton: Chapman and Hall/CRC, 2019. http://adv-r.had.co.nz/ Also check https://bookdown.org/ for more books on R Coding Club R Tutorials (focus on Ecology and Environmental Sciences), https://ourcodingclub.github.io/tutorials.html NB: By the way, this website is also built with R. Check: Yihui Xie. bookdown: Authoring Books and Technical Documents with R Markdown, 2022 https://bookdown.org/yihui/bookdown/ 0.8 Software, Tools, &amp; Technologies: The following is the list of software, applications and packages that we will be using in the course. Make sure to have them installed by the class when we are supposed to use them. The main tools for the course will be the programming language R and RStudio, the premier integrated development environment for R. R: https://cloud.r-project.org/ (choose the version for your operating system!) RStudio: https://rstudio.com/products/rstudio/download/ (RStudio Desktop, Open Source License — the free version) We will also use a variety of packages for R, which we will be installing when necessary. 0.9 Submitting Homework: 0.9.1 Handouts / Workbooks Homework assignments are to be submitted by the beginning of the next class; For the first few classes you must email them to the instructor (as attachments) Later, you will be publishing your homework assignments on your github pages and sending an email to the instructor informing that you have completed your homework and providing a relevant github link. In the subject of your email, please, use the following format: CourseID-LessonID-HW-Lastname-matriculationNumber, for example, if I were to submit homework for the first lesson, my subject header would look like: 070112-L01-HW-Romanov-12435687. DH is a collaborative field, so you are most welcome to work on your homework assignments in groups, however, you must still submit it. That is, if a groups of three works on one assignment, there must be three separate submissions: either emailed from each member’s email and published at each member’s github page. 0.9.2 DataCamp Assignments you are also assigned six four-hour interactive courses on different aspects of R on the educational platform DataCamp (&lt;www.datacamp.com&gt;); i.e., approximately one 4-hour course every two weeks. there are deadlines for each course, which are arranged in terms of your general progress (from introductory to intermediate). while you are enrolled in this course, you can also use any other courses on the DataCamp platform free of charge. I strongly recommend you to take advantage of this opportunity. 0.10 Schedule Location: Online 01 — Fri, 08. Apr. 2022 — 12:00—14:00 XX — Fri, 15. Apr. 2022 — Good Friday 02 — Fri, 22. Apr. 2022 — 12:00—14:00 03 — Fri, 29. Apr. 2022 — 12:00—14:00 04 — Fri, 06. May 2022 — 12:00—14:00 05 — Fri, 13. May 2022 — 12:00—14:00 06 — Fri, 20. May 2022 — 12:00—14:00 XX - Fri, 27. May 2022 - Ascension Weekend 07 — Fri, 03. Jun. 2022 — 12:00—14:00 08 — Fri, 10. Jun. 2022 — 12:00—14:00 09 — Fri, 17. Jun. 2022 — 12:00—14:00 10 — Fri, 24. Jun. 2022 — 12:00—14:00 11 — Fri, 01. Jul. 2022 — 12:00—14:00 12 — Fri, 08. Jul. 2022 — 12:00—14:00 13 — Fri, 15. Jul. 2022 — 12:00—14:00 0.11 Lesson Topics (subject to modifications) [ #01 ] General Introduction: Making Sure Everything Works; Getting to know R [ #02 ] Basics I: Data Structures and Subsetting [ #03 ] Basics II: Data Manipulation &amp; Exloratory Analysis [ #04 ] Basics III: Data Visualization; Functions [ #05 ] Data I: Collecting, Organizing, Creating [ #06 ] Data II: Modeling &amp; Manipulating [ #07 ] Text Analysis Methods I: Words, Ngrams, KWIC, etc. [ #08 ] Text Analysis Methods II: TF-IDF and other Similarity Measures [ #09 ] Text Analysis Methods III: Topic Modeling [ #10 ] Text Analysis Methods IV: Stylometric Analysis [ #11 ] Projects I [ #12 ] Projects II [ #13 ] Projects III "],["general-introduction.html", "1 General Introduction 1.1 Goals 1.2 Software 1.3 Class 1.4 Starting with our first workbook: 1.5 Topics covered 1.6 Reference materials 1.7 Homework 1.8 Common issues with homework 1.9 Submitting homework", " 1 General Introduction 1.1 Goals Install R and R Studio and start working with them R https://www.r-project.org/ R Studio https://www.rstudio.com/ Get to know R Notebooks (R markdown) 1.2 Software R https://www.r-project.org/ R Studio https://www.rstudio.com/ 1.3 Class R Studio Interface Installing libraries (packages) R Notebook elements: combining prose and code Converting R Notebook into different formats 1.3.1 Installing rmarkdown Instructions here: https://bookdown.org/yihui/rmarkdown/installation.html More information on R Markdown: https://rmarkdown.rstudio.com/lesson-1.html https://bookdown.org/yihui/rmarkdown/ 1.4 Starting with our first workbook: Now, download a worksheet file (01_worksheets_familiar-with-r.Rmd.zip). Unzip it and open in RStudio. Let’s work through it! NB: Original worksheets prepared by Lincoln Mullen, GMU (https://dh-r.lincolnmullen.com/worksheets.html) 1.5 Topics covered Values Variables Vectors Built-in functions Using the documentation Data frames Installing and loading packages Simple plots 1.6 Reference materials R Primer (https://dh-r.lincolnmullen.com/primer.html) in: Lincoln A. Mullen, Computational Historical Thinking: With Applications in R (2018–): https://dh-r.lincolnmullen.com. Use the this primer as a quick introduction to the R language, or as a reference for the rest of the course. The original worksheets have been developed by Lincoln Mullen (https://dh-r.lincolnmullen.com/worksheets.html). The ones used in this class might have undergone some changes and relevant adaptations. Your R installation may ‘speak’ your main language. It is nice on one hand, but can be quite inconvenient in class, where the main language is English. You may have to do cast some spells to switch R into English. Possible solutions can be found here: https://stackoverflow.com/questions/13575180/how-to-change-language-settings-in-r/ 1.7 Homework Complete the worksheet Getting familiar with R. Generate the results into HTML or PDF (PDF is a little bit trickier). Start working through the first assigned course in DataCamp (two weeks to complete; requires about 4 hours) Submit your homework as described below. 1.8 Common issues with homework 1.8.1 Tracing errors Errors happen all the time. You will run into errors when you run your code. You will run into error messages when “knitting” your document — as a result, your document will not be generated. To resolve this: It is important to run each chunk of code separately to ensure that they all work. If any of the chunks throw errors, you will not be able to “knit” your documents. When you run into an error, R Markdown panel (usually in the lower left corner of RStudio interface) will tell you in which line the error occurred. You will need to fix it the same way you would in Step 1. 1.8.2 Comments / Commenting out You do not want to constantly keep [re]installing libraries. So, if a library is already installed, you can “comment out” that line. install.packages(&quot;historydata&quot;) install.packages(&quot;dplyr&quot;) For example, the code chunk above should become: #install.packages(&quot;historydata&quot;) #install.packages(&quot;dplyr&quot;) Adding # in front of a line (or a section of a line) turns it into a comment and it will not longer be executed. 1.8.3 Random errors: Think about the following two lines of code. Any issues that you can explain? (You might want to run these lines in R to get some clues) `?median` variable1 &lt;- DigitalHumanities 1.9 Submitting homework Homework assignment must be submitted by the beginning of the next class; Email your homework to the instructor as attachments. In the subject of your email, please, add the following: 57528-LXX-HW-YourLastName-YourMatriculationNumber, where LXX is the number of the lesson for which you submit homework; YourLastName is your last name; and YourMatriculationNumber is your matriculation number. "],["basics-i-main-data-structures-in-r.html", "2 Basics I: Main data structures in R 2.1 Goals 2.2 Software 2.3 Class 2.4 Reference materials 2.5 Homework 2.6 Submitting homework", " 2 Basics I: Main data structures in R 2.1 Goals Getting to know main data structures in R 2.2 Software the same, with some new libraries: R https://www.r-project.org/ R Studio https://www.rstudio.com/ 2.3 Class Practice worksheet: 02_worksheets_data-structures.Rmd.zip NB: Original worksheets prepared by Lincoln Mullen, GMU (https://dh-r.lincolnmullen.com/worksheets.html) 2.3.1 Topics: Data Structures &amp; Types Data structures Vectors Matrices Data frames Lists Subsetting operations 2.3.2 Additional notes str() compactly displays information about an R object typeof() determines the internal type or storage mode of an R object class() tells you the data structure of an R object: list data.frame matrix vector numeric typeof() &gt; double — a double-precision vector (floats; default numberic vector type) typeof() &gt; integer — a vector of integers character typeof() &gt; character — a vector of strings/characters Checking class/type &amp; Conversion create test &lt;- c(1,2,3,4,5) is.___ tests whether a variable of a ___ class. or type: check the typeof() our test vector; then try test.ch &lt;- as.character(test) and check the type again; can you convert it back into its initial type?). is.___ converts into a ___ class. (___ is either: vector, matrix, data.frame, list) Now try the following commands and check the type and class of the new objects: test.matrix &lt;- as.matrix(test) test.df &lt;- as.data.frame(test) test.list &lt;- as.list(test) test.vector &lt;- as.vector(test.df$test) 2.4 Reference materials Read two chapters from: Wickham, Hadley. Advanced R, Second Edition. 2 edition. Boca Raton: Chapman and Hall/CRC, 2019. http://adv-r.had.co.nz/ Data structures Subsetting For the next class, read the following article (in open access, simply follow the link): Broman, Karl W., and Kara H. Woo. 2018. “Data Organization in Spreadsheets.” The American Statistician 72 (1): 2–10. https://doi.org/10.1080/00031305.2017.1375989. Additional readings: Read Introduction to Lincoln A. Mullen, Computational Historical Thinking: With Applications in R (2018–): (http://dh-r.lincolnmullen.com/introduction.html) 2.5 Homework Finish your worksheet and submit your HW as described below. 2.6 Submitting homework Homework assignment must be submitted by the beginning of the next class; Email your homework to the instructor as attachments. In the subject of your email, please, add the following: 57528-LXX-HW-YourLastName-YourMatriculationNumber, where LXX is the number of the lesson for which you submit homework; YourLastName is your last name; and YourMatriculationNumber is your matriculation number. "],["basics-ii-data-manipulation-exloratory-analysis.html", "3 Basics II: Data Manipulation &amp; Exloratory Analysis 3.1 Goals 3.2 Software 3.3 Class 3.4 Reference materials 3.5 Homework 3.6 Submitting homework", " 3 Basics II: Data Manipulation &amp; Exloratory Analysis 3.1 Goals Getting to know the basics of working with data: manipulating data, basic techniques of exploratory analysis 3.2 Software the same, with some new libraries: R https://www.r-project.org/ R Studio https://www.rstudio.com/ 3.3 Class Practice worksheets: 03_worksheets_data-manipulation-introduction.Rmd.zip 04_worksheets_data-manipulation-continued.Rmd.zip NB: Original worksheets prepared by Lincoln Mullen, GMU (https://dh-r.lincolnmullen.com/worksheets.html) 3.3.1 Topics Selecting columns (select()) Filtering rows (filter()) Creating new columns (mutate()) Sorting columns (arrange()) Split-apply-combine (group_by()) Summarizing or aggregating data (summarize()) Data joining with two table verbs (left_join() et al.) Data reshaping (spread() and gather()) 3.4 Reference materials Consult relevant chapters from: Healy, Kieran Data Visualization: A Practical Guide. Princeton University Press, 2018. ISBN: 978-0691181622. http://socviz.co/ Hadley Wickham &amp; Garrett Grolemund, R for Data Science: Import, Tidy, Transform, Visualize, and Model Data. O’Reilly, 2017. ISBN: 978-1491910399. https://r4ds.had.co.nz/ Wickham, Hadley. Advanced R, Second Edition. 2 edition. Boca Raton: Chapman and Hall/CRC, 2019. http://adv-r.had.co.nz/ 3.5 Homework Finish your worksheet and submit your HW as described below. Additional: if you’d like more practice, you can use swirl library: To install: install.packages(\"swirl\") To run: library(swirl) Then: swirl() it will offer you a set of interactive exercises similar to DataCamp. 3.6 Submitting homework Homework assignment must be submitted by the beginning of the next class; Email your homework to the instructor as attachments. In the subject of your email, please, add the following: 57528-LXX-HW-YourLastName-YourMatriculationNumber, where LXX is the number of the lesson for which you submit homework; YourLastName is your last name; and YourMatriculationNumber is your matriculation number. "],["basics-iii-data-visualization-functions.html", "4 Basics III: Data Visualization; Functions 4.1 Goals 4.2 Software 4.3 Class 4.4 Topics 4.5 Reference materials 4.6 Homework 4.7 Submitting homework", " 4 Basics III: Data Visualization; Functions 4.1 Goals Getting to know the basics of data visualization; writing simple functions (reusable, packaged code) 4.2 Software the same, with some new libraries: R https://www.r-project.org/ R Studio https://www.rstudio.com/ 4.3 Class Practice worksheets: 05_worksheets_ggplot2-introduction-MGR-mod.Rmd.zip 06_worksheets_functions.Rmd.zip NB: Original worksheets prepared by Lincoln Mullen, GMU (https://dh-r.lincolnmullen.com/worksheets.html) 4.4 Topics Basics of using ggplot2 “grammar” of graphics Basic geoms in ggplot2 Histogram Lines Bar plots Faceting Labels Create your own plots Writing your own functions Explanation of functions Function calls Function definition 4.5 Reference materials Consult relevant chapters from: Healy, Kieran Data Visualization: A Practical Guide. Princeton University Press, 2018. ISBN: 978-0691181622. http://socviz.co/ Hadley Wickham &amp; Garrett Grolemund, R for Data Science: Import, Tidy, Transform, Visualize, and Model Data. O’Reilly, 2017. ISBN: 978-1491910399. https://r4ds.had.co.nz/ Wickham, Hadley. Advanced R, Second Edition. 2 edition. Boca Raton: Chapman and Hall/CRC, 2019. http://adv-r.had.co.nz/ 4.6 Homework Finish your worksheet and submit your HW as described below. Additional: if you’d like more practice, you can use swirl library: To install: install.packages(\"swirl\") To run: library(swirl) Then: swirl() it will offer you a set of interactive exercises similar to DataCamp. 4.7 Submitting homework Homework assignment must be submitted by the beginning of the next class; Email your homework to the instructor as attachments. In the subject of your email, please, add the following: 57528-LXX-HW-YourLastName-YourMatriculationNumber, where LXX is the number of the lesson for which you submit homework; YourLastName is your last name; and YourMatriculationNumber is your matriculation number. "],["data-i-collecting-organizing-creating.html", "5 Data I: Collecting, Organizing, Creating 5.1 Goals 5.2 Software 5.3 In Class I: Theoretical and Conceptual 5.4 In Class II: Practical 5.5 OCR in R 5.6 Reference Materials: 5.7 Homework 5.8 Submitting homework", " 5 Data I: Collecting, Organizing, Creating 5.1 Goals Getting to know the basics of working with data: collecting, creating, organizing. 5.2 Software R OCR Engines (https://www.onlineocr.net/) OCR can also be done directly in R (requires Tesseract installed) Excel, Google Spreadsheets, or any other alternative 5.3 In Class I: Theoretical and Conceptual 5.3.1 Ways of obtaining data Reusing already produced data One may require to mold data into a more fitting structure. Creating one’s own dataset Digitizing data from printed and/or hand-written sources 5.3.2 Main format Relational databases or Tables/Spreadsheets (tabular data)? Tabular format: tables; spreadsheets; CSV/TSV files. Unique identifiers: tables with different data can be connected via unique identifiers Note: A relational database (rDB) is a collection of interconnected tables. Tables in an rDB are connected with each other via unique identifiers which are usually automatically created by the database itself when new data is added. One can maintain interconnected tables without creating a rDB: Open Linked Data Example: Table of the growth of cities. One table includes information on population over time; Another table includes coordinates of the cities from the dataset. It is more efficient and practical (reducing error rate from typos) to work on these tables separately, and connect them via unique identifiers of cities which are used in both tables. 5.3.2.1 Note on the CSV/TSV format CSV stands for comma-separated values; TSV — for tab-separated values. Below is an examples of a CSV format. Here, the first line is the header, which provides the names of columns; each line is a row, while columns are separated with , commas. city,growth_from_2000_to_2013,latitude,longitude,population,rank,state New York,4.8%,40.7127837,-74.0059413,8405837,1,New York Los Angeles,4.8%,34.0522342,-118.2436849,3884307,2,California Chicago,-6.1%,41.8781136,-87.6297982,2718782,3,Illinois Houston,11.0%,29.7604267,-95.3698028,2195914,4,Texas Philadelphia,2.6%,39.9525839,-75.1652215,1553165,5,Pennsylvania TSV is a better option than a CSV, since TAB characters (\\t) are very unlikely to appear in values. Neither TSV not CSV are good for preserving new line characters (\\n)—or, in other words, text split into multiple lines/paragraphs. As a workaround, one can convert \\n into some unlikely-to-occur character combination (for example, ;;;), which would be easy to restore into \\n later, if necessary. 5.3.3 Basic principles of organizing data: Tidy Data 5.3.3.1 Tidy Data Each variable is in its own column Each observation is in its own row Each value is in its own cell 5.3.3.2 Clean Data Column names and row names are easy to use and informative. In general, it is a good practice to avoid spaces and special characters. Good example: western_cities Alternative good example: WesternCities Bad example: Western Cities (only the largest) Obvious mistakes in the data have been removed Date format: YYYY-MM-DD is the most reliable format. Any thoughts why? There should be no empty cells: If you have them, it might be that your data is not organized properly. If your data is organized properly, NA must be used as an explicit indication that data point is not available. Each cell must contain only one piece of data. Variable values must be internally consistent Be consistent in coding your values: M and man are different values computationally, but may be the same in the dataset; Keep track of your categories: a document where all codes used in the data set are explained. Preserve original values If you are working with a historical dataset, it might be inconsistent. For example, distances between cities are given in different formats: days of travel, miles, farsaḫs/parasangs, etc.). Instead of replacing original values, it is better to create an additional column, where this information will be homogenized according to some principle. Keeping original data will allow to honogenize data in multiple ways (example: day of travel). Clearly differentiate between the original and modified/modelled values. The use of suffixes can be convenient: Distance_Orig vs Distance_Modified. Most of editing operations should be performed in software other than R; any spreadsheet program will work, unless it cannot export into CSV/TSV format. Keep in mind that if you prepare your data in an Excel-like program, rich formatting (like manual highlights, bolds, and italics) is not data and it will be lost, when you export your data into CSV/TSV format. Note: It might be useful, however, to use rule-based highlighting in order, for example, to identify bad values that need to be fixed. Back up your data! http://github.com is a great place for this, plus it allows to work collaboratively. Google spreadsheets is a decent alternative, but it lacks version control and detailed tracking of changes. 5.4 In Class II: Practical 5.4.1 Morris Dataset: the East Vs. the West War-making capacity since 4000 BCE (in social development points). Data source: Morris, Ian. 2013. The Measure of Civilization: How Social Development Decides the Fate of Nations. Princeton: Princeton University Press. 5.4.1.1 Difficulty: Easy Digitize “War-making capacity since 4000 BCE” from this file Morris_2013_Combined.pdf. Fix the dataset so that it conforms to the principles of tidy data. What should be corrected? Load the data set into R Graph chronological changes in war-making capacities for the East and the West. When the East was in the lead? When the West was in the lead? How can you determine that? (Hint: review logical operators and vector comparison). 5.4.1.2 Difficulty: More complicated Digitize “Maximum Settlement Sizes” from this file Morris_2013_Combined.pdf. Fix the dataset so that it conforms to the principles of tidy data. What should be corrected? The datasets for the East and the West are separate. What would be your strategies to combine them? Graph chronological changes in war-making capacities for the East and the West. When the East was in the lead? What were the most prominent settlements? When the West was in the lead? What were the most prominent settlements? How can you determine that? (Hint: review logical operators and vector comparison). 5.5 OCR in R As was noted above, we can use R to OCR text in PDFs and images. The following libraries will be necessary. library(pdftools) library(tidyverse) library(tesseract) library(readr) This code we can use to OCR individual PNG files. text &lt;- tesseract::ocr(pathToPNGfile, engine = tesseract(&quot;eng&quot;)) readr::write_lines(text, str_replace(pathToPNGfile, &quot;.png&quot;, &quot;.txt&quot;)) This code can be used to process entire PDFs: imagesToProcess &lt;- pdftools::pdf_convert(pathToPDFfile, dpi = 600) text &lt;- tesseract::ocr(imagesToProcess, engine = tesseract(&quot;eng&quot;)) readr::write_lines(text, str_replace(pathToPDFfile, &quot;.pdf&quot;, &quot;.txt&quot;)) NB: I had issues running pdftools on Mac. Make sure that you install additional required tools for it. For more details, see: https://github.com/ropensci/pdftools. More details on how to use Tesseract with R you can find here: https://cran.r-project.org/web/packages/tesseract/vignettes/intro.html 5.6 Reference Materials: Wickham, Hadley. 2014. “Tidy Data.” Journal of Statistical Software 59 (10). https://doi.org/10.18637/jss.v059.i10. (The article in open access) Check these slides: A. Ginolhac, E. Koncina, R. Krause. Principles of Tidy Data: tidyr https://lsru.github.io/tv_course/lecture05_tidyr.html (Also check their other lectures/slides: ) Broman, Karl W., and Kara H. Woo. 2018. “Data Organization in Spreadsheets.” The American Statistician 72 (1): 2–10. https://doi.org/10.1080/00031305.2017.1375989. 5.6.1 Additional Morris, Ian. 2013. The Measure of Civilization: How Social Development Decides the Fate of Nations. Princeton: Princeton University Press. Note: This book is a methodological companion to: Morris, Ian. 2010. Why the West Rules—for Now: The Patterns of History, and What They Reveal about the Future. New York: Farrar, Straus and Giroux. 5.6.2 Additional Readings Wickham, Hadley. 2014. “Tidy Data.” Journal of Statistical Software 59 (10). https://doi.org/10.18637/jss.v059.i10. (The article in open access) 5.7 Homework Finish your worksheet and submit your HW as described below. Additional: if you’d like more practice, you can use swirl library: To install: install.packages(\"swirl\") To run: library(swirl) Then: swirl() it will offer you a set of interactive exercises similar to DataCamp. 5.8 Submitting homework Homework assignment must be submitted by the beginning of the next class; Email your homework to the instructor as attachments. In the subject of your email, please, add the following: 57528-LXX-HW-YourLastName-YourMatriculationNumber, where LXX is the number of the lesson for which you submit homework; YourLastName is your last name; and YourMatriculationNumber is your matriculation number. "],["data-ii-modeling-manipulating.html", "6 Data II: Modeling &amp; Manipulating 6.1 Goals: 6.2 Software: 6.3 In Class I: Theoretical and Conceptual 6.4 In Class II: Practical 6.5 Reference Materials 6.6 Homework 6.7 Submitting homework", " 6 Data II: Modeling &amp; Manipulating 6.1 Goals: Getting to know the basics of working with data: modeling, manipulating 6.2 Software: R Excel, Google Spreadsheets, or any other alternative 6.3 In Class I: Theoretical and Conceptual 6.3.1 Ways of modeling data: Categorization “[Modeling is] a continual process of coming to know by manipulating representations.” Willard McCarty, “Modeling: A Study in Words and Meanings,” in Susan Schreibman, Ray Siemens, and John Unsworth, A New Companion to Digital Humanities, 2nd ed. (Chichester, UK, 2016), http://www.digitalhumanities.org/companion/. One of the most common way of modeling data in historical research—joining items into broader categories. Categorization is important because it allows to group items with low frequencies into items with higher frequencies, and through those discern patterns and trends. Additionally, alternative categorizations allow one to test different perspectives on historical data. The overall process is rather simple in terms of technological implementation, but is quite complex in terms of subject knowledge and specialized expertise which is required to make well-informed decisions. For example, let’s say we have the following categories: baker, blacksmith, coppersmith, confectioner, and goldsmith. These can be categorized as occupations; Additionally, blacksmith, coppersmith, and goldsmith can also be categorized as ‘metal industry’, while baker and confectioner, can be categorized as ‘food industry’; Yet even more, one might want to introduce additional categories, such as luxury production to include items like goldsmith and confectioner; and regular production for items like baker, blacksmith, coppersmith. Such categorizations can be created in two different ways, with each having its advantages: first, one can create them as additional columns. This approach will allow to always have the original—or alternative—classifications at hand, which is helpful for re-thinking classifications and creating alternative ones where items will be reclassified differently, based on a different set of assumptions about your subject. second, these can be created in separate files, which might be easier as one does not have to stare at existing classifications and therefore will be less influenced by them in making classification decisions. Additionally, one can use some pre-existing classifications that have already been created in academic literature. These most likely need to be digitized and converted into properly formatted data, as we discussed in the previous lesson. 6.3.2 Normalization This is a rather simple, yet important procedure, which is, on the technical side, very similar to what was described above. In essence, the main goal of normalization is to remove insignificant differences that may hinder analysis. Most common examples would be: bringing information to the same format (e.g., dates, names, etc.) unifying spelling differences It is a safe practice to preserve the initial data, creating normalized data in separate columns (or tables) 6.3.3 Note: Proxies, Features, Abstractions These are the terms that refer to the same idea. The notion of proxies is used in data visualization, that of features—in computer science; that of abstractions—in the humanities (see, for example, Franco Moretti’s Graph, Maps, Trees). The main idea behind these terms is that some simple features of an object can act as proxies to some complex phenomena. For example, Ian Morris uses the size of cities as a proxy to the complexity of social organization. The logic is following: the larger the size of a city, the more complex social, economic and technical organization is required to keep that city functional, therefore it alone can be used as an indicator of the social complexity (or a proxy to the social complexity). While proxies are selected from what is available—usually not much, especially when it comes to historical data—as a way to approach something more complex, it may be argued that abstractions are often arrived to from the opposite direction. We start with an object which is available in its complexity and we reduce its complexity to a more manageable form which—we expect—would prepresent a particular aspect of the initial complex object. Most commonly this is applied to texts in a natural language. For example, in stylometry texts are reduced to freqiency lists of most frequent features, which are expected to represent an authorial fingerprint. The complexity of texts can be reduced in a number of ways: into a list of lemmas (e.g., for topic modeling analysis), frequency lists (e.g., for document distance comparison, such as, for example, stylometry), keyword values (e.g., for identifying texts on a similar topic, using, for example, the TF-IDF method), syntactic structures, ngrams, etc. As you get to practice and experiment more, you will start coming up withyour own ways of creating abstractions depending on your current research questions. 6.4 In Class II: Practical Data for the practical session and homework: Bosker_Data.zip. The data is available in open access and is a supplement to a study (see, Reference Materials). The zipped file includes everything you need for the practical session. Download and unzip (read the article at home!). Note: create a notebook and work through the following questions. Group work is encouraged. Please, explain in one or two sentences what you do in each step, so that your work is also human readable. Please, submit this notebook as your homework. Make sure to name your file in the following manner: 57528-LXX-HW-YourLastName-YourMatriculationNumber.EXT, where LXX is the number of the lesson for which you submit homework; YourLastName is your last name; and YourMatriculationNumber is your matriculation number; EXT is the extension of your file — yopu can submit it either as HTML or as a PDF. 6.4.1 SECTION I. Please, provide your answers (2-3 sentences) to the following questions: Can you figure which file contains data? In which format is data? How can we load it into R? (Describe and provide working R code) What is the chronological extent of this data? [easy-ish] What periods can it be divided into? How can we do that? How can we introduce the following categories into this data: [easy] North Africa and Europe? [a bit more complicated] the Ottoman Empire? [a tad tricky] Christiandom and Islamdom? 6.4.2 SECTION II Please, provide your answers as working R code and a couple of sentences to describe how you approach (2-3 sentences) the following problems: What is the chronological extent of this data? [easy-ish] What periods can it be divided into? How can we do that? Can you generate a cumulative graph of population over time, divided into these periods? (Hint: there should be one line for one period and another for another, etc.) How can we introduce the following categories into this data: [easy] North Africa and Europe? Construct comparative graphs of population in North Africa and Europe (similar to what you did with the Morris dataset). Here you will need to sum up population! [a bit more complicated] the Ottoman Empire? When did the Empire had the largest number of cities (based on the data set)? When was its population at the highest? [a tad tricky] Christiandom and Islamdom? What are the largest cities of Islamdom for each reported period? What are the largest western cities of Islamdom between 1000 and 1500 CE? 6.5 Reference Materials Bosker, Maarten, Eltjo Buringh, and Jan Luiten van Zanden. 2012. “From Baghdad to London: Unraveling Urban Development in Europe, the Middle East, and North Africa, 800–1800.” The Review of Economics and Statistics 95 (4): 1418–37. https://doi.org/10.1162/REST_a_00284. Bosker, Maarten, Eltjo Buringh, and Jan Luiten Van Zanden. 2014. “Replication Data for: From Baghdad to London: Unraveling Urban Development in Europe, the Middle East, and North Africa, 800-1800.” Harvard Dataverse. https://doi.org/10.7910/DVN/24747. 6.5.1 Additional Readings Moretti, Franco. 2007. Graphs, Maps, Trees: Abstract Models for Literary History. London - New York: Verso. Moretti, Franco. 2013. Distant Reading. London; New York: Verso. Romanov, Maxim G. 2017. “Algorithmic Analysis of Medieval Arabic Biographical Collections.” Speculum 92 (S1): S226–46. https://doi.org/10.1086/693970. 6.6 Homework Finish your worksheet and submit your HW as described below. Additional: if you’d like more practice, you can use swirl library: To install: install.packages(\"swirl\") To run: library(swirl) Then: swirl() it will offer you a set of interactive exercises similar to DataCamp. 6.7 Submitting homework Homework assignment must be submitted by the beginning of the next class; Email your homework to the instructor as attachments. In the subject of your email, please, add the following: 57528-LXX-HW-YourLastName-YourMatriculationNumber, where LXX is the number of the lesson for which you submit homework; YourLastName is your last name; and YourMatriculationNumber is your matriculation number. "],["text-analysis-i-basics.html", "7 Text Analysis I: Basics 7.1 Goals 7.2 Preliminaries 7.3 Texts and Text Analysis 7.4 Word Frequencies and Word Clouds 7.5 Word Distribution Plots 7.6 Word Distribution Plots: With Frequencies Over Time 7.7 KWIC: Keywords-in-Context 7.8 Homework 7.9 Submitting homework", " 7 Text Analysis I: Basics 7.1 Goals basic text analysis concepts; word frequencies and word clouds; word distribution plots; kwic: keywords-in-context 7.2 Preliminaries 7.2.1 Data We will use the following text files in this worksheet. Please download them and keep them close to your worksheet. Since some of the files are quite large, you want to download them before loading them into R: The Richmond Dispatch (1862) Star Wars I: The Phantom Menace (script) In order to make loading these files a little bit easier, you can paste the path to where you placed these files into an isolated variable and then reuse it as follows (in other words, make sure that your pathToFiles is the path on your local machine): pathToFiles = &quot;./files/data/&quot; d1862 &lt;- read.delim(paste0(pathToFiles, &quot;dispatch_1862.tsv&quot;), encoding=&quot;UTF-8&quot;, header=TRUE, quote=&quot;&quot;) sw1 &lt;- scan(paste0(pathToFiles, &quot;sw1.md&quot;), what=&quot;character&quot;, sep=&quot;\\n&quot;) The first file is articles from “The Daily Dispatch” for the year 1862. The newspaper was published in Richmond, VA — the capital of the Confederate States (the South) during the American Civil War (1861-1865). The second file is a script of the first episode of Star Wars :). 7.2.2 Libraries The following are the libraries that we will need for this section. Install those that you do not have yet. #install.packages(&quot;tidyverse&quot;, &quot;readr&quot;, &quot;stringr&quot;) #install.packages(&quot;tidytext&quot;, &quot;wordcloud&quot;, &quot;RColorBrewer&quot;&quot;, &quot;quanteda&quot;, &quot;readtext&quot;) # General ones library(tidyverse) library(readr) library(&quot;RColorBrewer&quot;) # Text Analysis Specific library(stringr) library(tidytext) library(wordcloud) library(quanteda) library(readtext) 7.2.3 Functions in R (a refresher) Functions are groups of related statements that perform a specific task, which help breaking a program into smaller and modular chunks. As programs grow larger and larger, functions make them more organized and manageable. Functions help avoiding repetition and makes code reusable. Most programming languages, R including, come with a lot of pre-defined—or built-in—functions. Essentially, all statements that take arguments in parentheses are functions. For instance, in the code chunk above, read.delim() is a function that takes as its arguments: 1) filename (or, path to a file); 2) encoding; 3) specifies that the file has a header; and 4) not using \" as a special character. We can also write our own functions, which take care of sets of operations thet we tend to repeat again and again. Later, take a look at this video by one of the key R developers, and check this tutorial. 7.2.3.1 Simple Function Example: Hypothenuse (From Wikipedia) In geometry, a hypotenuse is the longest side of a right-angled triangle, the side opposite the right angle. The length of the hypotenuse of a right triangle can be found using the Pythagorean theorem, which states that the square of the length of the hypotenuse equals the sum of the squares of the lengths of the other two sides (catheti). For example, if one of the other sides has a length of 3 (when squared, 9) and the other has a length of 4 (when squared, 16), then their squares add up to 25. The length of the hypotenuse is the square root of 25, that is, 5. Let’s write a function that takes lengths of catheti as arguments and returns the length of hypothenuse: hypothenuse &lt;- function(cathetus1, cathetus2) { hypothenuse&lt;- sqrt(cathetus1*cathetus1+cathetus2*cathetus2) print(paste(&quot;In the triangle with catheti of length&quot;, cathetus1, &quot;and&quot;, cathetus2, &quot;, the length of hypothenuse is&quot;, hypothenuse)) return(hypothenuse) } Let’s try a simple example: hypothenuse(3,4) ## [1] &quot;In the triangle with catheti of length 3 and 4 , the length of hypothenuse is 5&quot; ## [1] 5 Let’s try a crazy example: hypothenuse(390,456) ## [1] &quot;In the triangle with catheti of length 390 and 456 , the length of hypothenuse is 600.029999250037&quot; ## [1] 600.03 ###$ More complex one: Cleaning Text Let’s say we want to clean up a text so that it is easier to analyze it: 1) convert everithing to lower case; 2) remove all non-alphanumeric characters; and 3) make sure that there are no multiple spaces: clean_up_text = function(x) { x %&gt;% str_to_lower %&gt;% # make text lower case str_replace_all(&quot;[^[:alnum:]]&quot;, &quot; &quot;) %&gt;% # remove non-alphanumeric symbols str_replace_all(&quot;\\\\s+&quot;, &quot; &quot;) # collapse multiple spaces } Let’s test it now: text = &quot;This is a sentence with punctuation, which mentions Hamburg, a city in Germany.&quot; clean_up_text(text) ## [1] &quot;this is a sentence with punctuation which mentions hamburg a city in germany &quot; 7.3 Texts and Text Analysis We can think of text analysis as means of extracting meaningful information from structured and unstructured texts. As historians, we often do that by reading texts and collecting relevant information by taking notes, writing index cards, summarizing texts, juxtaposing one texts against another, comparing texts, looking into how specific words and terms are used, etc. Doing text analysis computationally we do lots of similar things: we extract information of specific kind, we compare texts, we look for similarities, we look differences, etc. While there are similarities between traditional text analysis, there are of course, also significant differences. One of them is procedural: in computational reading we must explicitly perform every step of our analyses. For example, when we read a sentence, we, sort of, automatically identify the meaningful words — subject, verb, object, etc.; we identify keywords; we parse every word, identifying what part of speech it is, what is its lemma (i.e. its dictionary form, etc.). By doing these steps we re-construct the meaning of the text that we read — but we do most of these steps almost unconsciously, especially if a text is written in our native tongues. In computational analysis, these steps must be performed explicitly (in the order of growing complexity): Tokenization: what we see as a text made of words, the computer sees as a continuous string of characters (white spaces, punctuation and the like are characters). We need to break such strings into discreet objects that computer can understand construe as words. Lemmatization: reduces the variety of forms of the same words to their dictionary forms. Another, somewhat similar procedure is called stemming, which usually means the removal of most common suffixes and endings to get to the stem (or, root) of the word. POS (part-of-speech tagging): this is where we run some NLP tool that identifies the part of speech of each word in our text. Syntactic analysis: is the most complicated procedure, which is also usually performed with some NLP tool, which analyzes syntactic relationships within each sentence, identifying its subject(s), verb(s), object(s), etc. NOTE: NLP: natural language processing; Token: you can think of token as a continuous string of letter characters, as a word as it appears in the text in its inflected forms with possible other attached elements (in Arabic we often have prepositions, articles, pronominal suffixes, which are not part of the word, but attached to it); Lemma: the dictionary form of the word; Stem: a “root” of the word; Some examples: #install.packages(&quot;textstem&quot;) library(textstem) sentence = c( &quot;He tried to open one of the bigger boxes.&quot;, &quot;The smaller boxes did not want to be opened.&quot;, &quot;Different forms: open, opens, opened, opening, opened, opener, openers.&quot; ) The library textstem does lemmatization and stemming, but only for English. Tokenization can be performed with str_split() function — and you can define how you want your string to be split. Tokenization str_split(sentence, &quot;\\\\W+&quot;) ## [[1]] ## [1] &quot;He&quot; &quot;tried&quot; &quot;to&quot; &quot;open&quot; &quot;one&quot; &quot;of&quot; &quot;the&quot; &quot;bigger&quot; ## [9] &quot;boxes&quot; &quot;&quot; ## ## [[2]] ## [1] &quot;The&quot; &quot;smaller&quot; &quot;boxes&quot; &quot;did&quot; &quot;not&quot; &quot;want&quot; &quot;to&quot; ## [8] &quot;be&quot; &quot;opened&quot; &quot;&quot; ## ## [[3]] ## [1] &quot;Different&quot; &quot;forms&quot; &quot;open&quot; &quot;opens&quot; &quot;opened&quot; &quot;opening&quot; ## [7] &quot;opened&quot; &quot;opener&quot; &quot;openers&quot; &quot;&quot; Lemmatization lemmatize_strings(sentence) ## [1] &quot;He try to open one of the big box.&quot; ## [2] &quot;The small box do not want to be open.&quot; ## [3] &quot;Different form: open, open, open, open, open, opener, opener.&quot; Stemming stem_strings(sentence) ## [1] &quot;He tri to open on of the bigger box.&quot; ## [2] &quot;The smaller box did not want to be open.&quot; ## [3] &quot;Differ form: open, open, open, open, open, open, open.&quot; Note: It is often important to ensure that all capital letters are converted into small letters or the other way around; additionally, some normalization procedures may be necessary to reduce orthographic complexities of specific languages (for example, ö &gt; oe in German; simplification of forms of alif in Arabic, etc.). 7.4 Word Frequencies and Word Clouds Let’s load all issues of Dispatch from 1862. library(tidytext) d1862 &lt;- read.delim(paste0(pathToFiles, &quot;dispatch_1862.tsv&quot;), encoding=&quot;UTF-8&quot;, header=TRUE, quote=&quot;&quot;) kable(head(d1862)) id date type header text 1862-02-20_ad-blank_20 1862-02-20 ad-blank Richmond Dispatch. Richmond Dispatch. Thursday morning… Feb. 20, 1862. 1862-02-20_article_21 1862-02-20 article From Charleston. From Charleston. Charleston — its people, its Hospitality, its ladies — Treatment of the soldiers, &amp; c.special correspondence of the Dispatch.] Charleston, 16th February, 1862. It were well worth one’s while, if for no other purpose than to enjoy the contrast, to leave the odious mud, the shrouds of damp, the days of gloom and nights of darkness, which you of Richmond are now experiencing, and come to this land of balmy sunshine, budding flowers, odoriferous smells, excellent hearts, and cultivated understandings. It is like escaping from an Egyptian pyramid into a crystal grotto, and exchanging the goblins of the mist, for the fairies of an ampler other — a diviner air. The trees are in blossom, the clover fields rich in fragrant bloom, the birds carolling as if the merry spring time of the year were upon us, and all Nature wears a drapery of loveliness, opulent in tints that would cool an August noon. You can easily imagine, under these circumstances, the luxury of a soldier’s life on the Southern coast. No mud knee deep and rising, as at Manassas; no log huts and India rubber coats; no long-top boots and barbarous roads; no nothing which has made the camps of the army of the Potomac the Golgotha of the volunteer’s existence. Has the soldier here to keep step to the rhythm of his thoughts on the solitary midnight beat, the quiet stars look down upon him from the deep blue of the Heavenly dome, and the breezes are as mild as Italian zephyrs. Is it necessary to build entrenchments, big ditches, or do such drudgery of a campaign, a host of negroes relieve him of the task. – Is he hungry, his servants prepare superb repasts. Is he ragged, the ladies of the State supply fresh garments. Is he ill, a score of homes and hospitals invite him to enter and receive the tender nursing and watchful sympathy to which noble woman has here devoted herself. Is anything required to alleviate his wants, add to his comforts, or sweeten the bitter potions of life, he has only to utter a word and the measure is full. The soldiers of the grand army now in Virginia must not suppose, however, that because these blessings are poured out with such bountiful hands here, hearts are not beating and hands are not working for them. The interest which the women of the South are taking in the war — and it is, in truth, the women who are carrying on this contest and smoothing the rugged pathway which leads to success — is bounded by no geographical limits. The man who fights for his country any where, whether it be on the mountains of Western Virginia, in the forests of the West, on the banks of the Potomac, or on the sea-beard, occupies the same warm place in their hearts. Here, soldiers can receive anything they desire, because they are at home. – Transportation is good, and communication is uninterrupted. Abroad the case is reversed. At Wilmington there are now piled up in the depot two or three car loads of boxes and packages destined for the army, which have been detained there for weeks because of a lack of enterprise necessary to forward them to their destination. How much comfort is contained in that pile of parcels, eloquent with the sympathy and memory of distant friends! What a world of suffering might be relieved if railroad officials would only one day forget the almighty dollar and transmit these needful articles to their owners! It is my intention on some future occasion to devote a chapter to the consideration of hospitals, and the efforts of women, in connection with the sanitary welfare of the army. To-day, however, there are other matters pressing on my pen of equal interest, and which, with equal grace, may be embodied in the first of a series of letters from this now attractive section of the Confederacy. Few people can visit Charleston without being struck by the extraordinary oneness of sentiment which everywhere exists. With all the drawbacks the people have experienced — the blockade, the fire, the depopulation of homes, and other misfortunes incident to the war — there is a union of fortune and sympathy manifested in every relation of life which indicates that the great heart of the public is beating in grand accord with the march of passing events. Everything has been reduced to a war standard. While cheerfulness and confidence is written on all faces, the name of gaiety has been almost forgotten. An evening party has not been held since the opening tocsin of the war. Houses have become factories. Women, whose hands never knew toil before, now ply the needle and the loom from morning till night — the tottering grand dame and the little child are alike devoted to the work of mercy. The silks and the satins which were wont to be seen on the daily promenade have given place to the plainer garbs of homespun, while the pleasures of visiting and sociability are exchanged for the tender charities which flow in loving streams at the bedside of the sick. The men are all in arms — even the aged, whom the law has exempted from military duty, have formed themselves into corps de reserves, and await the moment of action when they may be called upon to defend their homes. The young men are in camp at various points in the State – come on the coast and some in the interior, but all armed, drilled, and ready for the foe. A few, a very few from the grand mass are at their homes discharged or on furlough, but the first note of alarm will carry them into the ranks of the army again, to do battle wherever danger calls. Of sick, there are, alas! too many. – As in the incipiency of the army of the Potomac, measles, typhoid fever, mumps, pneumonia, and other camp diseases, have their victims, and, notwithstanding the admirable sanitary regulations of the State, the best of nursing, good weather, and all the comfortable surroundings with which it is sought to encompass the volunteers, both hospitals and private houses present a sad array of humanity suffering from the worst of ills that flesh is heir to. So much for the social aspect of Charleston, and, indeed, of South Carolina generally. Physically, the city wears a garb of mourning. The fire-fiend which a few weeks ago passed over the fairest portion of the town has left the trail of the serpent behind, and bright as may be the contrast afforded elsewhere, still the old thought comes back to you that the dark hand of affliction is lying heavily upon our dearest friends; that the rich have been made poor; the associations clustered around their homesteads have been destroyed, and that the existence of hundreds of individuals, once bright with the how of promise, has been set backward at least a score of years. It is a sad sight to pass through the burned district and see the ravages of the angry conflagration. From river to river its blackened monuments still stand, marking the savage fury with which it swept everything before it — the magnificent edifice and the humble cottage, church and warehouse, factory and workshop, all alike prostrate before the fiery blast, and nought left behind but irregular lines of cracked and crumbling walls, chimneys, plies of debris, High towers, fair temples, goodly theatres, Strong walls rich porches, princely palaces, Fine streets, brave houses, sacred sepulchres, All these turned to dust, And overcome with conflagration’s fiery rust. Workmen have removed portions of the ruins dangerous to the public and obstructing the streets, and are still engaged in rescuing such articles of building material as have escaped destruction; but many months, if not years, will elapse, before the city will wear the same aspect it presented before the great event. Some of the ruins are beautiful in the most picturesque sense of the term – two especially. I refer to what is called the Circular Church and the Catholic Cathedral — the first with its high walls, rows of tall brown pillars in front, circular shape, and grass-covered church-yard in the year, looking not unlike a miniature edition of the Coliseum at Rome; the last, resembling in its Gothic grotesqueness, its pointed arches, square steeple, tall windows, and artistic beauty, the rare old Abbeys which have come down to us preserved on the Kicher’s page. Every one with an artistic eye is struck by the beauty to which I have alluded, but unfortunately, there is a luck of either disposition or artists to save the picture. Speaking of grave-yards, it is a remarkable fact that although three of these gloomy mansions of the dead were embraced in the circle of fire, not a tombstone has been defaced nor an obituary notice terated. Theers, and charity so generally dispensed to the poorer classes as to place them effectually beyond the teach of want. A remarkable instance of the preservation of property was afforded in the Mills House, one of the splendid hotels of Charleston. With fire in front, fire on the side, and fire behind, the air filled with a storm of flakes large as your hand, the streets so thick with the burning rain that one could not walk in it unless wrapped in a wet blanket, such was the coolness and energy displayed by the proprietors, a few friends, and the servants of the house, that the flames were beaten back, and the entire square, and probably the portion of the city behind it, saved. During this perilous hour, while hundreds of thousands of dollars were at stake, and men were rushing wildly in all directions, seeking to preserve their property it is a noble tribute to manhood, that Mr. Purcell, forgetting himself and his valuable interests, sent his servants and a wagon to the house of an aged lady and saved, nearly every article she owned. Then returning to his hotel in the midst of the fire, he directed his attention to the salvation of what belonged to himself and partners. Another instance of the noble character of both Messrs. Purcell &amp; Nickerson, of the Mills Souse, is that, after the conflagration had subsided, they tendered to several families the use of their apartments or furniture free of charge, until the unfortunates could provide for themselves. The fiery ordeal through which the house passed is indelibly impressed upon its front and sides. – Great pieces of stucco have been lapped off by the fiery tongues that forked out from the opposite side of the street, paint is blistered, windows scorched and blackened — in a word, had the hotel been subjected to a severe attack of the small pox, the eruption on the epidermis could not have been more complete than is evident upon the pitted face of the building. But I have already transgressed the prudent longitude of a letter. Pens are like locomotives, however; they always required a mile or two of track to stop in, and a switching point is not presented at every paragraph. – Coming into the depot, however, let me add that everything here and on the coast is comparatively quiet. The Yankees make an occasional foray on the coast with their gunboats. A few thousand — three or four, probably — have landed on Edisto Island; nobody knows for what. A few tugs are at work pulling spiles in the approaches to Savannah, and an attack is apprehended there. A bombardment may possibly result and the city may be destroyed; but the Yankees can no more land in the face of our troops under arms in the vicinity, than they can take a comet. Persimmons. 1862-02-20_article_22 1862-02-20 article Recollections of a Bull Run prisoner. Recollections of a Bull Run prisoner. Corporal Merrill, a returned Bull Run prisoner, recently returned from Richmond, is relating his experience in the Rochester Express. He indulges in personal impertinences in relation to Hon. Alex. Stevens, but in conclusion describes him as of a reserved demeanor, but agreeable in conversation, and while talking with the prisoners, seem to studiously avoid any remark that could be supposed to injure their feelings. He visited quite often. A Treacherous editor. We were also honored with a call from the editor of the Richmond Dispatch, who came in disguise, and regaled the prisoners with plug tobacco and cigars, professed the deepest sympathy, and was exceedingly inquisitive. The day following he spread before his readers an account of his observations at the hospital, wherein he took occasion to denounce us in the most unsurprising terms. Tray, Blanche and Sweetheart joined in the demoniac howl, and for a season little else was advocated by the Richmond press than a proposition to remove laz, Yankees to the coal mines, as soon as their wounds were healed, and compel them to work for their living. The editor of the Dispatch subsequently renewed his visit, and was recognized. The boys, however, professed to regard him as a stranger, but took occasion to introduce the said editor as a topic of discussion, and berated him to their satisfaction. Believing himself unknown, he bore it without remonstrance, but did not remain long, and we never looked upon his like again. First Impressions. We had visitors of every class. I was leaning upon the balcony one day, when an elderly lady approached me, saying that she desired to pass into the ward where the Confederate patients were confined, but she did not want to see any of the horrid Yankees. I had understood that the popular superstition respecting the Federal soldiers favored of horns and claws; but not calculating the effect of a sudden disclosure, I remarked, in winning accounts and with the pleasantest distortion of countenance of which my facial muscles were susceptible, that I was a beast of Ephesus myself! The disclosure seemed to take effect in the pit of the lady’s stomach, for after a momentary collapse she wildly flung up her arms, exclaiming, O-yah-ugh! and vanished. A Sprig of Chivalry. On every Sunday, the outskirts of the prison were thronged with victors, who had come upon a staring expedition, and seemed amply repaid if they obtained a glimpse of the Yankees. Barnum’s Museum would have passed for a side show in comparison with hospital attraction. Upon one occasion I was standing at the window with a companion, when we were accosted by a savage looking follow in a planter’s hat, and very genteelly dressed, who asked me if I had had enough of Bull Run? I replied by inquiring if he was there? No, he was not. I suppose not, said I, for any one who could insult a prisoner is too cowardly to go where there is any danger. I regretted this observation, for it was no sooner uttered than the prancing fire-eater emitted the most sulphurous volley of oaths that I had heard on the sacred soil, – Foaming and snorting with wrath, he paced backward and forward, his glittering eye. In a fine frenzy rolling. till having collected himself for a second attack, he exclaimed, Well, you belong to the Confederates now; you are in our power! My companions asked him if he belonged to the Confederates. Yes, he rejoined with an emphasis, I do! Well, what does your master ask for you? said the former. This was a sad blow to the chivalric Southerner, who was of a suspiciously dark complexion, and certainly could not be classed among poor white trash. To add to his discomfiture, the bystanders laughed as heartily as the Yankees. The only resource of our rabid friend was to cast out another volley of oaths, but before he could do justice to his subject he was walked off by the guard. 1862-02-20_article_23 1862-02-20 article NO HEADER To the soldiers from South Carolina in the army of the Potomac. – By direction of the Governor and Council of South Carolina laddress you. You were the first to respond to the call of the State for the defence of our common country. At her bidding you rushed to a distant border and unfurled the Palmette in the face of an advancing foe. For her and for yourselves you have won imperishable renown, when, in conjunction with your fellow-soldiers from other States, you achieved those victories which hurled the hireling foe behind the defences of his Capital. You have displayed a brilliant courage, and, higher still, you have borne with fortitude, not only the battle’s shock, but the deadly fever and the winter’s storm. The State is proud of your conduct, your devotion, and your achievements. In the name of that State, a grateful people, we thank you. But the main object is not yet achieved — the establishment before the world, and in fact, of the independence of the Confederate States of America. Our own existence as a State is involved in it. The enemy, drawing confidence from overwhelming numbers and superior appliances of war, still vainly hopes to subjugate us; and his forces are enlisted for the war. You are trained and tried; stand, therefore, to your arms. Let him no longer insult you with the consoling hope that you will vanish in his presence. Tarnish not the bright crown which now gleams on your brow by leaving the field with the enemy in your sight. Let it not be said that by your absence the valiant few who remained were overwhelmed and the fair fabric — our country’s liberty — laid low in the dust. With your holy we can defeat the foe, and we will. By all the high impulse which move a soldier’s soul, and all the sacred influences of patriotism, we ask you to record your names on the immortal list of those who have already expressed their resolution to fight this battle until we shall conquer an honorable and a glorious peace. When the crowning victory is won — when our country stands disenthralled and redeemed, and its independence established — history will say of you, sons of Carolina, that while you were the first to fly to arms, you refused to lay them down until our cause was vindicated. Then a grateful country will be lavish of her 1862-02-20_article_24 1862-02-20 article The New York Herald of the 15th. The New York Herald of the 15th. The waste of composition and labor exhibited in the columns of this paper in its issue of the 15th inst., is truly astonishing. – Three whole pages are devoted to the Brilliant victory at Roanoke. The first page contains an elaborate map of the Scene of the Great Success of Gen. Burnside and Commodore Goldborough – Roanoke Island and its Rebel Batteries. Then follows the accounts of the battle extracted and published in our issue of yesterday. The second page is devoted entirely to the publication of the names, regiments, staff officers, and commanders who won the victory. In addition to these details of every regiment, in which the names of every field officer is paraded, biographical sketches of each individual are given, so that even the most searching curiosity is thoroughly satiated. The third page is almost exclusively devoted to the Naval Section, giving minute descriptions of the officers and of each gunboat and steamer. We subjoin short sketches of some of the Heroes: General Ambrose B. Burnside. The Commander-in-Chief of the expedition, Brigadier General Ambrose Everett Burnside, was born at Liberty, in Union county, Indiana, on the 23d of May, 1824, and is consequently now in his thirty-eighth year. In 1842 he entered the West Point Military Academy, and graduated in 1847, with the rank of Second Lieutenant in the Second United States artillery. In September of the same year he was transferred to the Third artillery, and was attached to the rebel General then captain) Bragg’s company, with which he marched in the division of General Patterson to the city of Mexico, and there remained until the close of hostilities. With this company he also was engaged for three or four years in the Indian border wars of New Mexico, distinguishing himself in an encounter with the Apache tribe, in August, 1849, near Los Vegas, where he completely routed them, killing eighteen and taking nine prisoners, besides capturing a number of horses. He retired from service in October, 1853. Shortly after his retirement from the army he turned his attention to the manufacture of a breech-loading rifle — well known as the Burnside rifle – invented by himself, and possessed of peculiar and superior merit. During the administration of Buchanan it was submitted to Secretary of War Floyd, who gave assurances that it would be adopted. It transpired subsequently, however, that Floyd had made a bargain with another inventor, with whom he was to share the profits, and General Burnside, who had incurred considerable expense in bringing his weapon to perfection on the strength of Floyd’s promises, was consequently involved in some pecuniary difficulties, from which an upright and honorable character and persevering industry have since entirely relieved him. He sold the establishment in Bristol, where his rifle was manufactured, to his brother-in-law, who has since carried it on and furnished a considerable quantity of the arms to the Government. He was, subsequent to this transaction, connected with the Illinois Central Railroad, in company with General McClellan. His position was that of President of the Land Office. Flag-Officer L. M. Goldsborough. Flag-Officer Louis M. Goldsborough, commander of the naval part of the Burnside expedition, was born in the District of Columbia. He is a citizen of the State of Maryland, but received his appointment in the United States Navy from the District of Columbia. His first entrance into the Navy bears date June 18, 1812. He has consequently been nearly fifty years in the United States service, over eighteen of which he has passed at sea in the various grades of the naval service. Among others, he commanded the Marion, thirty-eight guns, in 1842, at the time she was attached to the squadron of Commodores Ridgely and Morris, as Brazil. In 1847 he commanded the Ohio, seventy-four guns, and afterwards commanded the Cumberland, forty-four guns, and the Levant, eighteen guns, at the time those vessels were attached to the squadron of Commodore Silas H. Stringham, in the Mediterranean. The Cumberland was the flagship while under his command. His term of service on shore is about twelve years, and he has been off active duty about eighteen years. the Federal gunboats. Names. Commanders. Guns. BricknerAct. Mas. J C. Giddings1CeresAct. Mas. S A McDermaid2ChasseurLt. Com. John West. 6Com. BarneyLt. Com. R D Renshaw2Com. PerryLt. Com. C H Finsser2DelawareLt Com S P Quackenbush3GraniteAct. Mas. E Soomer1GrenadeCom. W B Avery3Gen. PutnamAct Mas W J Hoskiss2HuzzarAct Mas Fred Crocker4HunchbackLt Com E R Calhoun4HetzelLt Com H K Davenport2J. N SeymourAct Mas F S Welles2LouisianaActing Master Holker4LockwoodAct Mas S L Graves3LancerAct Mas B Morley4MorseAct Mas Peter Hayes2PhiladelphiaAct Mas Silas Reynolds1PioneerAct Mas Chas S Baker4PicketAct Mas T P Ives4RocketAct Mas Jas Lake3RangerAct Mas J B Childs2Stars and StripesLt Com Werner8SouthfieldLt Com Behm4ShawaneseAct Mas T S Woodward2ShrapnelLt Com Ed Staples3UnderwriterLt Com Jeffers4Valley CityLt Com J C Chaplin5Vidette4WhiteheadLt Com French1Young RoverAct Mas I B Studley5Total guns94 1862-02-20_article_25 1862-02-20 article NO HEADER Fred. Douglas on the War. – The New York Times gives the following report of a lecture on the war by the notorious Fred. Douglas: Mr. Douglass, in commencing, said that at the time he proposed to speak, the victories of Fort Henry and Roanoke Island had not been fought, and even those victories had not removed the somewhat sombre view which he took of the war. This war had developed our patience.Laughter.] He was not here to find fault with the Government; that was dangerous.Laughter.] Such as it was, it was our only bulwark, and he was for standing by the Government.Applause.] He would not find fault with Bull Run, Ball’s Bluff, or Big Bethel, but he meant to call attention to the uncertainty and vacillation and hesitation in grappling with the great question of the war — Slavery. The great question was, What shall be done with the slaves after they are emancipated? He appeared as one who had studied Slavery on both sides of Mason and Dixon’s line. He considered himself an American citizen. He was born on the most sacred part of the soil.Laughter and applause.] There was nothing in the behavior of the colored race in the United States in this crisis, that should prevent him from being proud of being a colored citizen of the United States.Applause.] They had traitors of all other nations in Fort Lafayette as cold as Slone – laughter] – but they had no black man charged with disloyalty during this war. Yet, black men were good enough to fight by the side of Washington and Jackson, and were not good enough to fight beside McClellan and Hallack.Laughter.] But, he would not complain — he only threw out these hints.Laughter.] The question was simply whether free institutions and liberty should stand or fall. Any peace without emancipation would be a hollow peace. Even that rhinoceros-hided place. Washington had by a species of adumbration, come to realize this truth.Laughter.] What had slavery done forms, that it had any claim upon us that we should spare it? Tens of thousands of American citizens were now taking their first lessons in anti-slavery. He held up in a indecorous vein the tenderness of many who, like the New York Herald, would hang a rebel and confiscate all his property — except his slaves. Slavery had kept our army quiet for seven months, and displaced good and loyal men by incompetent and disloyal ones. The question was. What shall be done with the 4, 000, 000 slaves if emancipated? We might ask what shall be done with the 350, 000 slaveholders? His plan was, after the slaves were emancipated to let them alone, do nothing with them.Laughter.] Let them take care of themselves as others do. Applause.] The other day a man approached him, evidently taking him for an Indian, and the following seems took places: Stranger — Halles, come from way back, oh? Fred stood quiet, and looked as much like an Indian as he could. Stranger — Come from way back? Indian, oh? Fred — Not nigger. The stranger fell back as if he had been shot.Laughter.] We can quickly check what types of articles are there in those issues. d1862 %&gt;% count(type, sort=T) ## type n ## 1 article 14680 ## 2 ad-blank 7029 ## 3 orders 3987 ## 4 advert 2037 ## 5 death 233 ## 6 married 186 ## 7 died 70 ## 8 poem 45 ## 9 order 30 ## 10 letter 27 ## 11 ordered 15 ## 12 entry 7 ## 13 acticle 2 ## 14 adverts 2 ## 15 notice 2 ## 16 role 2 ## 17 runaway 2 ## 18 article 1 ## 19 25 1 ## 20 Wanted 1 ## 21 aritcle 1 ## 22 artcle 1 ## 23 articl 1 ## 24 articler 1 ## 25 aticle 1 ## 26 death, 1 ## 27 married, 1 ## 28 marry 1 ## 29 oders 1 ## 30 oped 1 ## 31 ordinal 1 ## 32 printrun 1 ## 33 ranaway 1 ## 34 simple 1 We can create subsets of articles based on their types. death_d1862 &lt;- d1862 %&gt;% filter(type==&quot;death&quot; | type == &quot;died&quot;) Create subsets for other major types. Describe problems with the data set and how they can be fixed. your answer goes here… Now, let’s tidy them up: to work with this as a tidy dataset, we need to restructure it in the one-token-per-row format, which as we saw earlier is done with the unnest_tokens() function. test_set &lt;- death_d1862 test_set_tidy &lt;- test_set %&gt;% mutate(item_number = cumsum(str_detect(text, regex(&quot;^&quot;, ignore_case = TRUE)))) %&gt;% select(-type) %&gt;% unnest_tokens(word, text) %&gt;% mutate(word_number = row_number()) head(test_set_tidy) ## id date header item_number word word_number ## 1 1862-02-20_death_122 1862-02-20 Died 1 diedin 1 ## 2 1862-02-20_death_122 1862-02-20 Died 1 richmond 2 ## 3 1862-02-20_death_122 1862-02-20 Died 1 on 3 ## 4 1862-02-20_death_122 1862-02-20 Died 1 the 4 ## 5 1862-02-20_death_122 1862-02-20 Died 1 19th 5 ## 6 1862-02-20_death_122 1862-02-20 Died 1 inst 6 Stop words is an important concept. In general, this notion refers to the most frequent words/tokens which one might want to exclude from analysis. There are existing lists of stop words that you can find online, and they can work fine for testing purposes. data(&quot;stop_words&quot;) test_set_tidy_clean &lt;- test_set_tidy %&gt;% anti_join(stop_words, by=&quot;word&quot;) head(test_set_tidy_clean) ## id date header item_number word word_number ## 1 1862-02-20_death_122 1862-02-20 Died 1 diedin 1 ## 2 1862-02-20_death_122 1862-02-20 Died 1 richmond 2 ## 3 1862-02-20_death_122 1862-02-20 Died 1 19th 5 ## 4 1862-02-20_death_122 1862-02-20 Died 1 inst 6 ## 5 1862-02-20_death_122 1862-02-20 Died 1 berenice 8 ## 6 1862-02-20_death_122 1862-02-20 Died 1 adelaide 9 For research purposes, it is highly advisable to develop your own stop word lists. The process is very simple: create a frequency list of your tokens/words; arrange them by frequencies in descending order; save top 2-3,000 in a tsv/csv file; open in any table editor; add a new column and tag those words that you want to exclude. For example, 1 – for to exclude; 0 — for to keep. It is convenient to automatically fill the column with some default value (0), and then you can change only those that you want to remove (1). You will see that some words, despite their frequency, might be worth keeping. When you are done, you can load them and use anti_join function to filter your corpus. 7.4.1 Word Frequencies Let’s first count all the words: test_set_tidy %&gt;% count(word, sort = TRUE) %&gt;% head(15) ## word n ## 1 the 9352 ## 2 of 8148 ## 3 and 5875 ## 4 his 3390 ## 5 to 3355 ## 6 in 3272 ## 7 a 2730 ## 8 at 2388 ## 9 on 2331 ## 10 he 1595 ## 11 her 1533 ## 12 was 1211 ## 13 o&#39;clock 1102 ## 14 from 1084 ## 15 this 1084 Now, let’s also remove the stop words: test_set_tidy %&gt;% anti_join(stop_words, by=&quot;word&quot;) %&gt;% count(word, sort = TRUE) %&gt;% head(15) ## word n ## 1 o&#39;clock 1102 ## 2 friends 992 ## 3 residence 952 ## 4 funeral 883 ## 5 aged 763 ## 6 attend 704 ## 7 family 633 ## 8 age 588 ## 9 inst 585 ## 10 died 573 ## 11 invited 569 ## 12 months 512 ## 13 morning 481 ## 14 son 453 ## 15 death 406 7.4.2 Wordclouds Wordclouds can be an efficient way to visualize most frequent words. Unfortunately, in most cases, wordclouds are not used either correctly or efficiently. (Let’s check Google for some examples). library(wordcloud) library(&quot;RColorBrewer&quot;) test_set_tidy_clean &lt;- test_set_tidy %&gt;% anti_join(stop_words, by=&quot;word&quot;) %&gt;% count(word, sort=T) set.seed(1234) wordcloud(words=test_set_tidy_clean$word, freq=test_set_tidy_clean$n, min.freq = 1, rot.per = .25, random.order=FALSE, #scale=c(5,.5), max.words=150, colors=brewer.pal(8, &quot;Dark2&quot;)) What can we glean out form this wordcloud? Create a wordcloud for obituaries. # your code; your response Create a wordcloud for obituaries, but without stop words. # your code; your response Create a wordcloud for obituaries, but on lemmatized texts and without stop words. # your code; your response Summarize your observations below. What does stand out in these different versions of wordclouds? Which of the wordclouds you find more efficient? Can you think of some scenarios when a different type of wordcloud can be more efficient? Why? you answer goes here For more details on generating word clouds in R, see: http://www.sthda.com/english/wiki/text-mining-and-word-cloud-fundamentals-in-r-5-simple-steps-you-should-know. 7.5 Word Distribution Plots 7.5.1 Simple — a Star Wars Example This kind of plot works better with texts rather than with newspapers. Let’s take a look at a script of Episode I: SW_to_DF &lt;- function(path_to_file, episode){ sw_sentences &lt;- scan(path_to_file, what=&quot;character&quot;, sep=&quot;\\n&quot;) sw_sentences &lt;- as.character(sw_sentences) sw_sentences &lt;- gsub(&quot;([A-Z]) ([A-Z])&quot;, &quot;\\\\1_\\\\2&quot;, sw_sentences) sw_sentences &lt;- gsub(&quot;([A-Z])-([A-Z])&quot;, &quot;\\\\1_\\\\2&quot;, sw_sentences) sw_sentences &lt;- as.data.frame(cbind(episode, sw_sentences), stringsAsFactors=FALSE) colnames(sw_sentences) &lt;- c(&quot;episode&quot;, &quot;sentences&quot;) return(sw_sentences) } sw1_df &lt;- SW_to_DF(paste0(pathToFiles, &quot;sw1.md&quot;), &quot;sw1&quot;) sw1_df_tidy &lt;- sw1_df %&gt;% mutate(linenumber = row_number(), chapter = cumsum(str_detect(sentences, regex(&quot;^#&quot;, ignore_case = TRUE)))) sw1_df_tidy &lt;- sw1_df_tidy %&gt;% unnest_tokens(word, sentences) Try names of different characters (shmi, padme, anakin, sebulba, yoda, sith), or other terms that you know are tied to a specific part of the movie (pod, naboo, gungans, coruscant). ourWord = &quot;yoda&quot; word_occurance_vector &lt;- which(sw1_df_tidy$word == ourWord) plot(0, type=&#39;n&#39;, #ann=FALSE, xlim=c(1,length(sw1_df_tidy$word)), ylim=c(0,1), main=paste0(&quot;Dispersion Plot of `&quot;, ourWord, &quot;` in SW1&quot;), xlab=&quot;Movie Time&quot;, ylab=ourWord, yaxt=&quot;n&quot;) segments(x0=word_occurance_vector, x1=word_occurance_vector, y0=0, y1=2) 7.6 Word Distribution Plots: With Frequencies Over Time For newspapers—and other diachronic corpora—a different approach will work better: d1862 &lt;- read.delim(paste0(pathToFiles, &quot;dispatch_1862.tsv&quot;), encoding=&quot;UTF-8&quot;, header=TRUE, quote=&quot;&quot;, stringsAsFactors = FALSE) test_set &lt;- d1862 test_set$date &lt;- as.Date(test_set$date, format=&quot;%Y-%m-%d&quot;) test_set_tidy &lt;- test_set %&gt;% mutate(item_number = cumsum(str_detect(text, regex(&quot;^&quot;, ignore_case = TRUE)))) %&gt;% select(-type) %&gt;% unnest_tokens(word, text) %&gt;% mutate(word_number = row_number()) head(test_set_tidy) ## id date header item_number word ## 1 1862-02-20_ad-blank_20 1862-02-20 Richmond Dispatch. 1 richmond ## 2 1862-02-20_ad-blank_20 1862-02-20 Richmond Dispatch. 1 dispatch ## 3 1862-02-20_ad-blank_20 1862-02-20 Richmond Dispatch. 1 thursday ## 4 1862-02-20_ad-blank_20 1862-02-20 Richmond Dispatch. 1 morning ## 5 1862-02-20_ad-blank_20 1862-02-20 Richmond Dispatch. 1 feb ## 6 1862-02-20_ad-blank_20 1862-02-20 Richmond Dispatch. 1 20 ## word_number ## 1 1 ## 2 2 ## 3 3 ## 4 4 ## 5 5 ## 6 6 Now, we can calculate frequencies of all words by dates: test_set_tidy_freqDay &lt;- test_set_tidy %&gt;% anti_join(stop_words, by=&quot;word&quot;) %&gt;% group_by(date) %&gt;% count(word) head(test_set_tidy_freqDay) ## # A tibble: 6 × 3 ## # Groups: date [1] ## date word n ## &lt;date&gt; &lt;chr&gt; &lt;int&gt; ## 1 1862-01-01 000 13 ## 2 1862-01-01 007 1 ## 3 1862-01-01 014 1 ## 4 1862-01-01 1 11 ## 5 1862-01-01 10 5 ## 6 1862-01-01 100 2 We now can build a graph of word occurences over time. In the example below we search for manassas, which is the place where the the Second Battle of Bull Run (or, the Second Battle of Manassas) took place on August 28-30, 1862. The battle ended in Confederate victory. Our graph shows the spike of mentions of Manassas in the first days of September — right after the battle took place. Such graphs can be used to monitor discussions of different topic in chronological perspective. # interesting examples: # deserters, killed, # donelson (The Battle of Fort Donelson took place in early February of 1862), # manassas (place of the Second Bull Run, fought in August 28–30, 1862), # shiloh (Battle of Shiloh took place in April of 1862) ourWord = &quot;manassas&quot; test_set_tidy_word &lt;- test_set_tidy_freqDay %&gt;% filter(word==ourWord) plot(x=test_set_tidy_word$date, y=test_set_tidy_word$n, type=&quot;l&quot;, lty=3, lwd=1, main=paste0(&quot;Word `&quot;, ourWord, &quot;` over time&quot;), xlab = &quot;1862 - Dispatch coverage&quot;, ylab = &quot;word frequency per day&quot;) segments(x0=test_set_tidy_word$date, x1=test_set_tidy_word$date, y0=0, y1=test_set_tidy_word$n, lty=1, lwd=2) The graph like this can be used in a different way. Try words killed and deserters. When do these words spike? Can you interpret these graphs? your response goes here 7.7 KWIC: Keywords-in-Context Keywords-in-context is the most common method for creating concordances — a view that that allows us to go through all instances of specific words or word forms in order to understand how they are used. The quanteda library offers a very quick and easy application of this method: library(quanteda) library(readtext) dispatch1862 &lt;- readtext(paste0(pathToFiles, &quot;dispatch_1862.tsv&quot;), text_field = &quot;text&quot;, quote=&quot;&quot;) dispatch1862corpus &lt;- corpus(dispatch1862) Now, we can query the created corpus object using this command: kwic(YourCorpusObject, pattern = YourSearchPattern). pattern= can also take vectors (for example, c(\"soldier*\", \"troop*\")); you can also search for phrases with pattern=phrase(\"fort donelson\"); window= defines how many words will be shown before and after the match. kwic_test &lt;- kwic(dispatch1862corpus, pattern = &#39;lincoln&#39;, window=5) ## Warning: &#39;kwic.corpus()&#39; is deprecated. Use &#39;tokens()&#39; first. head(kwic_test) ## Keyword-in-context with 6 matches. ## [dispatch_1862.tsv.23, 40] cunning and cowardly Premier of | Lincoln | ## [dispatch_1862.tsv.23, 121] with the wishes of the | Lincoln | ## [dispatch_1862.tsv.92, 51] from 24 tyranny of the | Lincoln | ## [dispatch_1862.tsv.98, 1353] of proper storage Mrs. | Lincoln | ## [dispatch_1862.tsv.229, 47] York to-day is the brig | Lincoln | ## [dispatch_1862.tsv.231, 121] and before the forces of | Lincoln | ## ## to his knees. In ## Government, is a deliberate ## Government. Negroes ran off ## with her son Thomas aged ## , from Havana, with ## had begun to make camping To view results better, we can remove unnecessary columns: kwic_test %&gt;% as_tibble %&gt;% select(pre, keyword, post) %&gt;% head(15) ## # A tibble: 15 × 3 ## pre keyword post ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 cunning and cowardly Premier of Lincoln to his knees . In ## 2 with the wishes of the Lincoln Government , is a delibera… ## 3 from 24 tyranny of the Lincoln Government . Negroes ran o… ## 4 of proper storage Mrs . Lincoln with her son Thomas aged ## 5 York to-day is the brig Lincoln , from Havana , with ## 6 and before the forces of Lincoln had begun to make camping ## 7 enemy by water , the Lincoln Government not having then… ## 8 seat are openly cheering for Lincoln upon the streets . This ## 9 Southern War news . the Lincoln gunboats on the Tennessee . ## 10 Lincolnlies . ) Only two Lincoln gunboats came up to Floren… ## 11 vessels that have run the Lincoln blookade , either for entry ## 12 evacuated Springfield . On Wednesday Lincoln issued an order releasing … ## 13 operation of the order . Lincoln in his order says that ## 14 consider the Emancipation Proclamation of Lincoln : A meeting was held ## 15 of resolutions , asking President Lincoln to modify his proclamation… NB: quanteda is quite a robust library. Check this page with examples for other possible quick experiments: https://quanteda.io/articles/pkgdown/examples/plotting.html 7.8 Homework Read about ngrams in Chapter 4. Relationships between words: n-grams and correlations (https://www.tidytextmining.com/ngrams.html), in https://www.tidytextmining.com/. Using what you have learned in this chapter identify and analyze bigrams in Dispatch, 1862. Submit the results of your analysis as an R notebook, as usual. You are welcome to work in groups. Optional: Work through Chapter 9 of Arnold, Taylor, and Lauren Tilton. 2015. Humanities Data in R. New York, NY: Springer Science+Business Media. (on Moodle!): create a notebook with all the code discusses there and send it via email (share via DropBox or some other service, if too large). DataCamp Assignments. 7.9 Submitting homework Homework assignment must be submitted by the beginning of the next class; Email your homework to the instructor as attachments. In the subject of your email, please, add the following: 57528-LXX-HW-YourLastName-YourMatriculationNumber, where LXX is the number of the lesson for which you submit homework; YourLastName is your last name; and YourMatriculationNumber is your matriculation number. "],["text-analysis-ii-distances-keywords-summarization.html", "8 Text Analysis II: Distances, Keywords, Summarization 8.1 Goals 8.2 Preliminaries 8.3 Document similarity/distance measures: text2vec library 8.4 TF-IDF 8.5 Text summarization 8.6 Homework 8.7 Submitting homework", " 8 Text Analysis II: Distances, Keywords, Summarization 8.1 Goals similarity distances; keyword extraction (tf-idf); text summarization techniques; 8.2 Preliminaries 8.2.1 Data prep_fun = function(x) { x %&gt;% str_to_lower %&gt;% # make text lower case str_replace_all(&quot;[^[:alnum:]]&quot;, &quot; &quot;) %&gt;% # remove non-alphanumeric symbols str_replace_all(&quot;\\\\s+&quot;, &quot; &quot;) # collapse multiple spaces } d1862 &lt;- read.delim(&quot;./files/data/dispatch_1862.tsv&quot;, encoding=&quot;UTF-8&quot;, header=TRUE, quote=&quot;&quot;) The following are the libraries that we will need for this section. Install those that you do not have yet. #install.packages(&quot;tidyverse&quot;, &quot;readr&quot;, &quot;stringr&quot;, &quot;text2vec&quot;) #install.packages(&quot;tidytext&quot;, &quot;wordcloud&quot;, &quot;RColorBrewer&quot;&quot;, &quot;quanteda&quot;, &quot;readtext&quot;, &quot;igraph&quot;) # General ones library(tidyverse) library(readr) library(&quot;RColorBrewer&quot;) # text analysis specific library(stringr) library(text2vec) library(tidytext) library(wordcloud) library(quanteda) library(readtext) library(igraph) 8.3 Document similarity/distance measures: text2vec library Document similarity—or distance—measures are valuable for a variety of tasks, such as identification of texts with similar (or the same) content. Let’s just filter it down to some sample that would not take too much time to process. We also need to clean up our texts for better calculations. 8.3.1 Distance Measures: Jaccard index, Cosine similarity, Euclidean distance The text2vec library can calculate a several different kinds of distances (details: http://text2vec.org/similarity.html): Jaccard, cosine, and Euclidean. 8.3.1.1 Jaccard similarity/index is a simple measure of similarity based on the comparison of two sets, namely, as the proportion of the number of common words to the number of unique words in both documents. Jaccard similarity takes only unique set of words for each sentence/document (https://en.wikipedia.org/wiki/Jaccard_index). Jaccard index is commonly used to find text that deal with the same subjects (share same vocabulary — frequencies of words have no effect on this measure) Jaccard similarity measures the similarity between two nominal attributes by taking the intersection of both and divide it by their union. 8.3.1.2 Cosine similarity another approach that measures similarity based on the content overlap between documents: each document is represented as a bag-of-words and as a sparse vector; the measure of overlap is defined as angle between vectors. Cosine similarity is better when we compare texts of varied length (angle of vectors, instead of distance). (https://en.wikipedia.org/wiki/Cosine_similarity) Cosine similarity measures the similarity between two vectors by taking the cosine of the angle the two vectors make in their dot product space. If the angle is zero, their similarity is one, the larger the angle is, the smaller their similarity. The measure is independent of vector length. 8.3.1.3 Euclidean distance one of the most common measures—a straight-line distance between two points in Euclidian space; based on word frequencies and most commonly used to find duplicates (https://en.wikipedia.org/wiki/Euclidean_distance). NB: more detailed explanations, see https://cmry.github.io/notes/euclidean-v-cosine 8.3.1.4 Testing… Let’s try a small and simple example first. sentences = c(&quot;The Caliph arrived to Baghdad from Mecca.&quot;, &quot;The Caliph arrived to Mecca from Baghdad.&quot;, &quot;The Caliph arrived from Mecca to Baghdad. The Caliph arrived from Baghdad to Mecca.&quot;, &quot;The Caliph arrived to Baghdad from Mecca. The Caliph arrived. The Caliph arrived. The Caliph arrived.&quot;, &quot;The Caliph arrived to Baghdad from Mecca. The Caliph returned to Mecca from Baghdad.&quot;, &quot;The Caliph arrived from Mecca to Baghdad, and then returned to Mecca.&quot;, &quot;The vezier arrived from Isbahan to Mecca. The Caliph, Caliph, Caliph returned from Mecca to Baghdad Baghdad Baghdad.&quot;) testDF &lt;- data.frame(&quot;ID&quot; = as.character(1:length(sentences)), &quot;TEXT&quot; = sentences) testDF$TEXT &lt;- prep_fun(testDF$TEXT) Now, converting to text2vec format: # shared vector space it = itoken(as.vector(testDF$TEXT)) v = create_vocabulary(it) vectorizer = vocab_vectorizer(v) # creating matrices sparseMatrix = create_dtm(it, vectorizer) denseMatrix = as.matrix(sparseMatrix) Let’s take a look inside: denseMatrix ## and isbahan then vezier returned from arrived baghdad mecca to the caliph ## 1 0 0 0 0 0 1 1 1 1 1 1 1 ## 2 0 0 0 0 0 1 1 1 1 1 1 1 ## 3 0 0 0 0 0 2 2 2 2 2 2 2 ## 4 0 0 0 0 0 1 4 1 1 1 4 4 ## 5 0 0 0 0 1 2 1 2 2 2 2 2 ## 6 1 0 1 0 1 1 1 1 2 2 1 1 ## 7 0 1 0 1 1 2 1 3 2 2 2 3 sparseMatrix ## 7 x 12 sparse Matrix of class &quot;dgCMatrix&quot; ## [[ suppressing 12 column names &#39;and&#39;, &#39;isbahan&#39;, &#39;then&#39; ... ]] ## ## 1 . . . . . 1 1 1 1 1 1 1 ## 2 . . . . . 1 1 1 1 1 1 1 ## 3 . . . . . 2 2 2 2 2 2 2 ## 4 . . . . . 1 4 1 1 1 4 4 ## 5 . . . . 1 2 1 2 2 2 2 2 ## 6 1 . 1 . 1 1 1 1 2 2 1 1 ## 7 . 1 . 1 1 2 1 3 2 2 2 3 Let’s generate our distance matrices: Now, let’s check against the actual sentences: testDF$TEXT ## [1] &quot;the caliph arrived to baghdad from mecca &quot; ## [2] &quot;the caliph arrived to mecca from baghdad &quot; ## [3] &quot;the caliph arrived from mecca to baghdad the caliph arrived from baghdad to mecca &quot; ## [4] &quot;the caliph arrived to baghdad from mecca the caliph arrived the caliph arrived the caliph arrived &quot; ## [5] &quot;the caliph arrived to baghdad from mecca the caliph returned to mecca from baghdad &quot; ## [6] &quot;the caliph arrived from mecca to baghdad and then returned to mecca &quot; ## [7] &quot;the vezier arrived from isbahan to mecca the caliph caliph caliph returned from mecca to baghdad baghdad baghdad &quot; For convenience, here they are again, in a more readable form: The Caliph arrived to Baghdad from Mecca. The Caliph arrived to Mecca from Baghdad. The Caliph arrived from Mecca to Baghdad. The Caliph arrived from Baghdad to Mecca. The Caliph arrived to Baghdad from Mecca. The Caliph arrived. The Caliph arrived. The Caliph arrived. The Caliph arrived to Baghdad from Mecca. The Caliph returned to Mecca from Baghdad. The Caliph arrived from Mecca to Baghdad, and then returned to Mecca. The Vezier arrived from Isbahan to Mecca. The Caliph, Caliph, Caliph returned from Mecca to Baghdad Baghdad Baghdad. print(&quot;JACCARD: 1 is full match&quot;); jaccardMatrix ## [1] &quot;JACCARD: 1 is full match&quot; ## 7 x 7 sparse Matrix of class &quot;dgCMatrix&quot; ## 1 2 3 4 5 6 7 ## 1 1.000 1.000 1.000 1.000 0.875 0.7000000 0.7000000 ## 2 1.000 1.000 1.000 1.000 0.875 0.7000000 0.7000000 ## 3 1.000 1.000 1.000 1.000 0.875 0.7000000 0.7000000 ## 4 1.000 1.000 1.000 1.000 0.875 0.7000000 0.7000000 ## 5 0.875 0.875 0.875 0.875 1.000 0.8000000 0.8000000 ## 6 0.700 0.700 0.700 0.700 0.800 1.0000000 0.6666667 ## 7 0.700 0.700 0.700 0.700 0.800 0.6666667 1.0000000 print(&quot;COSINE: 1 is full match&quot;); cosineMatrix ## [1] &quot;COSINE: 1 is full match&quot; ## 7 x 7 sparse Matrix of class &quot;dgCMatrix&quot; ## 1 2 3 4 5 6 7 ## 1 1.0000000 1.0000000 1.0000000 0.8386279 0.9636241 0.8504201 0.9197090 ## 2 1.0000000 1.0000000 1.0000000 0.8386279 0.9636241 0.8504201 0.9197090 ## 3 1.0000000 1.0000000 1.0000000 0.8386279 0.9636241 0.8504201 0.9197090 ## 4 0.8386279 0.8386279 0.8386279 1.0000000 0.7614996 0.6240377 0.7423701 ## 5 0.9636241 0.9636241 0.9636241 0.7614996 1.0000000 0.8825226 0.9544271 ## 6 0.8504201 0.8504201 0.8504201 0.6240377 0.8825226 1.0000000 0.8111071 ## 7 0.9197090 0.9197090 0.9197090 0.7423701 0.9544271 0.8111071 1.0000000 print(&quot;EUCLIDEAN: 0 is full match&quot;); euclideanMatrix ## [1] &quot;EUCLIDEAN: 0 is full match&quot; ## [,1] [,2] [,3] [,4] [,5] [,6] [,7] ## [1,] 0.0000000 0.0000000 0.0000000 0.5681059 0.2697254 0.5469551 0.4007268 ## [2,] 0.0000000 0.0000000 0.0000000 0.5681059 0.2697254 0.5469551 0.4007268 ## [3,] 0.0000000 0.0000000 0.0000000 0.5681059 0.2697254 0.5469551 0.4007268 ## [4,] 0.5681059 0.5681059 0.5681059 0.0000000 0.6906524 0.8671358 0.7178160 ## [5,] 0.2697254 0.2697254 0.2697254 0.6906524 0.0000000 0.4847213 0.3019035 ## [6,] 0.5469551 0.5469551 0.5469551 0.8671358 0.4847213 0.0000000 0.6146428 ## [7,] 0.4007268 0.4007268 0.4007268 0.7178160 0.3019035 0.6146428 0.0000000 All three distances tell us that 1, 2, and 3 are the “same”. But when it comes to 4, the situation changes: Jaccard is most efficient, then Cosine, and Euclidean is least useful. If we want to find both 1 and 7, Cosine is the most effective, and Euclidean is the least effective. Perhaps: Jaccard &gt; overlap; Cosine &gt; similarity; Euclidean &gt; exactness? Additional read: https://cmry.github.io/notes/euclidean-v-cosine (although python is used here) 8.3.2 Now, let’s run this on “Dispatch” sample_d1862 &lt;- d1862 %&gt;% filter(type==&quot;advert&quot;) sample_d1862$text &lt;- prep_fun(sample_d1862$text) # shared vector space it = itoken(as.vector(sample_d1862$text)) v = create_vocabulary(it) %&gt;% prune_vocabulary(term_count_min = 3) # vectorizer = vocab_vectorizer(v) prune_vocabulary() is a useful function if you work with a large corpus; using term_count_min= would allow to remove low frequency vocabulary from our vector space and lighten up calculations. Now, we need to create a document-feature matrix: dtmD = create_dtm(it, vectorizer) jaccardMatrix = sim2(dtmD, dtmD, method = &quot;jaccard&quot;, norm = &quot;none&quot;) jaccardMatrix@Dimnames[[1]] &lt;- as.vector(sample_d1862$id) jaccardMatrix@Dimnames[[2]] &lt;- as.vector(sample_d1862$id) Let’s take a look at a small section of our matrix. Can you read it? How should this data look in tidy format? jaccardMatrix[1:4, 1:2] ## 4 x 2 sparse Matrix of class &quot;dgCMatrix&quot; ## 1862-04-22_advert_244 1862-04-22_advert_245 ## 1862-04-22_advert_244 1.00000000 0.05063291 ## 1862-04-22_advert_245 0.05063291 1.00000000 ## 1862-04-16_advert_6 0.10588235 0.11764706 ## 1862-04-16_advert_7 0.06578947 0.07317073 Converting matrix into a proper tidy data frame is a bit tricky. Luckily, igraph library can be extremely helpful here. We can treat our matrix as edges, where each number is the weight of each given edge. Loading this data into igraph will help us to avoid heavy-lifting on conversion as it can do all the complicated reconfiguration of our data, converting it into a proper dataframe that conforms to the principles of tidy data. All steps include: convert our initial object from a sparse matrix format into a regular matrix format; rename rows and columns (we have done this already though); create igraph object from our regular matrix; extract edges dataframe. jaccardMatrix &lt;- as.matrix(jaccardMatrix) library(igraph) jaccardNW &lt;- graph.adjacency(jaccardMatrix, mode=&quot;undirected&quot;, weighted=TRUE) jaccardNW &lt;- simplify(jaccardNW) jaccard_sim_df &lt;- as_data_frame(jaccardNW, what=&quot;edges&quot;) colnames(jaccard_sim_df) &lt;- c(&quot;text1&quot;, &quot;text2&quot;, &quot;jaccardSimilarity&quot;) jaccard_sim_df &lt;- jaccard_sim_df %&gt;% arrange(desc(jaccardSimilarity)) head(jaccard_sim_df, 10) ## text1 text2 jaccardSimilarity ## 1 1862-04-22_advert_244 1862-04-05_advert_248 1 ## 2 1862-01-13_advert_273 1862-01-11_advert_231 1 ## 3 1862-04-07_advert_127 1862-04-05_advert_235 1 ## 4 1862-04-07_advert_162 1862-04-05_advert_183 1 ## 5 1862-04-07_advert_189 1862-04-05_advert_161 1 ## 6 1862-04-07_advert_250 1862-04-05_advert_255 1 ## 7 1862-04-07_advert_253 1862-04-05_advert_289 1 ## 8 1862-04-07_advert_262 1862-04-05_advert_250 1 ## 9 1862-04-07_advert_263 1862-04-05_advert_251 1 ## 10 1862-04-07_advert_264 1862-04-05_advert_253 1 t_jaccard_sim_df_subset &lt;- jaccard_sim_df %&gt;% filter(jaccardSimilarity &gt; 0.49) %&gt;% filter(jaccardSimilarity &lt;= 0.9) %&gt;% arrange(desc(jaccardSimilarity), .by_group=T) head(t_jaccard_sim_df_subset, 10) ## text1 text2 jaccardSimilarity ## 1 1862-04-07_advert_30 1862-04-05_advert_237 0.9000000 ## 2 1862-04-07_advert_175 1862-04-05_advert_38 0.9000000 ## 3 1862-04-05_advert_303 1862-02-10_advert_149 0.9000000 ## 4 1862-01-13_advert_272 1862-01-11_advert_230 0.8979592 ## 5 1862-05-12_advert_219 1862-06-09_advert_63 0.8974359 ## 6 1862-03-10_advert_146 1862-04-05_advert_261 0.8928571 ## 7 1862-03-10_advert_13 1862-02-10_advert_224 0.8913043 ## 8 1862-05-12_advert_233 1862-06-09_advert_309 0.8913043 ## 9 1862-04-07_advert_22 1862-04-05_advert_148 0.8888889 ## 10 1862-04-07_advert_163 1862-04-05_advert_184 0.8888889 Let’s check the texts of 1862-04-07_advert_175 and 1862-04-05_advert_38, which have the score of 0.9000000 (a close match). example &lt;- d1862 %&gt;% filter(id==&quot;1862-04-07_advert_175&quot;) [1] &quot;Very desirable Residence on the South of Main st., between and Cheery streets, in Sidney, at Auction. -- We will sell, upon the premises, on Monday, the 7th day of April, at 4½ o&#39;clock P. M., a very comfortable and well arranged Framed Residence located as above, and now in the occupancy of Mr. Wm. B Davidson It 7 rooms with closed, kitchen and all accessary out building, and is particularly adapted for the accommodation of a medium family. The location of this house is as desirable as any in Sidney; is located in a very pleasant neighborhood, within a few minutes walk of the business portion of the city. The lot fronts 30 feet and runs back 189 feet to an alley 30 feet wide. Terms. -- One-third cash; the balance at 6 and 12 months, for negotiable notes, with interest added, and secured by a trust deed. The purchaser to pay the taxes and insurance for 1862. Jas. M. Taylor, &amp; Son, Auctioneers. mh 27&quot; example &lt;- d1862 %&gt;% filter(id==&quot;1862-04-05_advert_38&quot;) [1] &quot;Very desirable Framed Residence of the South side of Main St. Between culvert and Cherri streets. In Sidney, at Auction. -- We will sell, upon the premises, on Monday, the 7th day of April, at 4½ o&#39;clock P. M. a very comfortable and well arranged Framed. Residence located as above, and now in the occupancy of Mr. Wm. B Davidson. It contains 7 rooms, with closets, kitchen and all necessary out buildings, and is particularly adapted for the accommodation of a medium sized family. The location of this house is as desirable as any in Sidney; is located in a very pleasant neighborhood, and within a few minutes walk of the business portion of the city. The lot fronts 80 feet and runs back 189 feet to an alley 20 feet wide. Terms. -- One-third cash, the balance at 6 and 12 months, for negotiable notes, with interest added, and secured by a trust deed. The purchaser to pay the taxes and insurance for 1862 Jas. M. Taylor &amp; Son. mh 27 Auctioneers.&quot; Check http://text2vec.org/similarity.html and calculate cosine and euclidean distances for the same set of texts. What is the score for the same two texts? How do these scores differ in your opinion? your observations Choose one of the distance measures and take a close look at a subset of texts with the closest match (i.e. find a text which has the highest number of complete matches — 1.0). Try to apply as many techniques as possible in your analysis (e.g., frequency lists, wordclouds, graphing over time, etc.) your analysis, your code… 8.4 TF-IDF Before we proceed, let’s load some text. Below is an example of how you can load a text using its URL. However, be mindful about using this approach: it is convenient with a small number of short texts, but not efficient with large number of long texts. urlUDHR &lt;- &quot;https://univie-histr-2020s.github.io/files/UDHR.csv&quot; udhr &lt;- read.delim(url(urlUDHR), encoding=&quot;UTF-8&quot;, header=TRUE, quote=&quot;&quot;, stringsAsFactors = FALSE) udhrTidy &lt;- udhr %&gt;% unnest_tokens(WORD, TEXT) %&gt;% count(SECTION, WORD, sort=TRUE) summary(udhrTidy) ## SECTION WORD n ## Length:1134 Length:1134 Min. : 1.000 ## Class :character Class :character 1st Qu.: 1.000 ## Mode :character Mode :character Median : 1.000 ## Mean : 1.515 ## 3rd Qu.: 1.000 ## Max. :26.000 From Wikipedia: In information retrieval, tf–idf or TFIDF, short for term frequency–inverse document frequency, is a numerical statistic that is intended to reflect how important a word is to a document in a collection or corpus.[1] It is often used as a weighting factor in searches of information retrieval, text mining, and user modeling. The tf–idf value increases proportionally to the number of times a word appears in the document and is offset by the number of documents in the corpus that contain the word, which helps to adjust for the fact that some words appear more frequently in general. tf–idf is one of the most popular term-weighting schemes today; 83% of text-based recommender systems in digital libraries use tf–idf. Variations of the tf–idf weighting scheme are often used by search engines as a central tool in scoring and ranking a document’s relevance given a user query. tf–idf can be successfully used for stop-words filtering in various subject fields, including text summarization and classification. One of the simplest ranking functions is computed by summing the tf–idf for each query term; many more sophisticated ranking functions are variants of this simple model. udhr_TFIDF &lt;- udhrTidy %&gt;% bind_tf_idf(WORD, SECTION, n) %&gt;% arrange(desc(tf_idf)) %&gt;% ungroup udhr_TFIDF %&gt;% filter(tf_idf &gt;= 0.15) ## SECTION WORD n tf idf tf_idf ## 1 Article 4 slavery 2 0.09523810 3.433987 0.3270464 ## 2 Article 15 nationality 3 0.11538462 2.740840 0.3162508 ## 3 Article 3 liberty 1 0.09090909 3.433987 0.3121807 ## 4 Article 9 arrest 1 0.09090909 3.433987 0.3121807 ## 5 Article 9 detention 1 0.09090909 3.433987 0.3121807 ## 6 Article 9 exile 1 0.09090909 3.433987 0.3121807 ## 7 Article 6 everywhere 1 0.07692308 3.433987 0.2641529 ## 8 Article 9 arbitrary 1 0.09090909 2.740840 0.2491673 ## 9 Article 20 association 2 0.08695652 2.740840 0.2383339 ## 10 Article 5 cruel 1 0.06250000 3.433987 0.2146242 ## 11 Article 5 degrading 1 0.06250000 3.433987 0.2146242 ## 12 Article 5 inhuman 1 0.06250000 3.433987 0.2146242 ## 13 Article 5 punishment 1 0.06250000 3.433987 0.2146242 ## 14 Article 5 torture 1 0.06250000 3.433987 0.2146242 ## 15 Article 5 treatment 1 0.06250000 3.433987 0.2146242 ## 16 Article 3 life 1 0.09090909 2.335375 0.2123068 ## 17 Article 3 security 1 0.09090909 2.335375 0.2123068 ## 18 Article 9 subjected 1 0.09090909 2.335375 0.2123068 ## 19 Article 7 discrimination 3 0.07692308 2.740840 0.2108338 ## 20 Article 17 property 2 0.07692308 2.740840 0.2108338 ## 21 Article 6 before 1 0.07692308 2.740840 0.2108338 ## 22 Article 12 attacks 2 0.05263158 3.433987 0.1807362 ## 23 Article 24 holidays 1 0.05263158 3.433987 0.1807362 ## 24 Article 24 hours 1 0.05263158 3.433987 0.1807362 ## 25 Article 24 leisure 1 0.05263158 3.433987 0.1807362 ## 26 Article 24 reasonable 1 0.05263158 3.433987 0.1807362 ## 27 Article 24 rest 1 0.05263158 3.433987 0.1807362 ## 28 Article 24 working 1 0.05263158 3.433987 0.1807362 ## 29 Article 6 recognition 1 0.07692308 2.335375 0.1796442 ## 30 Article 3 person 1 0.09090909 1.824549 0.1658681 ## 31 Article 8 by 3 0.11111111 1.488077 0.1653419 ## 32 Article 4 forms 1 0.04761905 3.433987 0.1635232 ## 33 Article 4 prohibited 1 0.04761905 3.433987 0.1635232 ## 34 Article 4 servitude 1 0.04761905 3.433987 0.1635232 ## 35 Article 4 slave 1 0.04761905 3.433987 0.1635232 ## 36 Article 26 education 7 0.05882353 2.740840 0.1612259 hist(udhr_TFIDF$tf_idf) Let’s take a look at any of the Articles: articleID = &quot;Article 4&quot; temp &lt;- filter(udhr_TFIDF, SECTION==articleID) %&gt;% arrange(desc(tf_idf)) temp ## SECTION WORD n tf idf tf_idf ## 1 Article 4 slavery 2 0.09523810 3.4339872 0.327046400 ## 2 Article 4 forms 1 0.04761905 3.4339872 0.163523200 ## 3 Article 4 prohibited 1 0.04761905 3.4339872 0.163523200 ## 4 Article 4 servitude 1 0.04761905 3.4339872 0.163523200 ## 5 Article 4 slave 1 0.04761905 3.4339872 0.163523200 ## 6 Article 4 trade 1 0.04761905 2.7408400 0.130516192 ## 7 Article 4 held 1 0.04761905 2.3353749 0.111208329 ## 8 Article 4 their 1 0.04761905 2.3353749 0.111208329 ## 9 Article 4 shall 2 0.09523810 0.7949299 0.075707607 ## 10 Article 4 all 1 0.04761905 1.3545457 0.064502174 ## 11 Article 4 one 1 0.04761905 1.2367626 0.058893458 ## 12 Article 4 be 2 0.09523810 0.6007739 0.057216558 ## 13 Article 4 no 1 0.04761905 1.1314021 0.053876291 ## 14 Article 4 in 2 0.09523810 0.5436154 0.051772900 ## 15 Article 4 or 1 0.04761905 0.7259370 0.034568429 ## 16 Article 4 and 1 0.04761905 0.2559334 0.012187304 ## 17 Article 4 the 1 0.04761905 0.1017827 0.004846795 articleID = &quot;Article 26&quot; temp &lt;- filter(udhr_TFIDF, SECTION==articleID) %&gt;% arrange(desc(tf_idf)) temp ## SECTION WORD n tf idf tf_idf ## 1 Article 26 education 7 0.058823529 2.74084002 0.161225884 ## 2 Article 26 elementary 2 0.016806723 3.43398720 0.057714071 ## 3 Article 26 shall 8 0.067226891 0.79492987 0.053440664 ## 4 Article 26 fundamental 2 0.016806723 2.04769284 0.034415006 ## 5 Article 26 human 2 0.016806723 2.04769284 0.034415006 ## 6 Article 26 nations 2 0.016806723 2.04769284 0.034415006 ## 7 Article 26 be 6 0.050420168 0.60077386 0.030291119 ## 8 Article 26 accessible 1 0.008403361 3.43398720 0.028857035 ## 9 Article 26 activities 1 0.008403361 3.43398720 0.028857035 ## 10 Article 26 available 1 0.008403361 3.43398720 0.028857035 ## 11 Article 26 choose 1 0.008403361 3.43398720 0.028857035 ## 12 Article 26 compulsory 1 0.008403361 3.43398720 0.028857035 ## 13 Article 26 directed 1 0.008403361 3.43398720 0.028857035 ## 14 Article 26 equally 1 0.008403361 3.43398720 0.028857035 ## 15 Article 26 friendship 1 0.008403361 3.43398720 0.028857035 ## 16 Article 26 further 1 0.008403361 3.43398720 0.028857035 ## 17 Article 26 generally 1 0.008403361 3.43398720 0.028857035 ## 18 Article 26 given 1 0.008403361 3.43398720 0.028857035 ## 19 Article 26 groups 1 0.008403361 3.43398720 0.028857035 ## 20 Article 26 higher 1 0.008403361 3.43398720 0.028857035 ## 21 Article 26 least 1 0.008403361 3.43398720 0.028857035 ## 22 Article 26 maintenance 1 0.008403361 3.43398720 0.028857035 ## 23 Article 26 merit 1 0.008403361 3.43398720 0.028857035 ## 24 Article 26 parents 1 0.008403361 3.43398720 0.028857035 ## 25 Article 26 prior 1 0.008403361 3.43398720 0.028857035 ## 26 Article 26 professional 1 0.008403361 3.43398720 0.028857035 ## 27 Article 26 racial 1 0.008403361 3.43398720 0.028857035 ## 28 Article 26 religious 1 0.008403361 3.43398720 0.028857035 ## 29 Article 26 stages 1 0.008403361 3.43398720 0.028857035 ## 30 Article 26 strengthening 1 0.008403361 3.43398720 0.028857035 ## 31 Article 26 technical 1 0.008403361 3.43398720 0.028857035 ## 32 Article 26 tolerance 1 0.008403361 3.43398720 0.028857035 ## 33 Article 26 among 1 0.008403361 2.74084002 0.023032269 ## 34 Article 26 children 1 0.008403361 2.74084002 0.023032269 ## 35 Article 26 kind 1 0.008403361 2.74084002 0.023032269 ## 36 Article 26 made 1 0.008403361 2.74084002 0.023032269 ## 37 Article 26 peace 1 0.008403361 2.74084002 0.023032269 ## 38 Article 26 promote 1 0.008403361 2.74084002 0.023032269 ## 39 Article 26 understanding 1 0.008403361 2.74084002 0.023032269 ## 40 Article 26 all 2 0.016806723 1.35454566 0.022765473 ## 41 Article 26 for 2 0.016806723 1.23676263 0.020785927 ## 42 Article 26 basis 1 0.008403361 2.33537492 0.019624999 ## 43 Article 26 have 1 0.008403361 2.33537492 0.019624999 ## 44 Article 26 on 1 0.008403361 2.33537492 0.019624999 ## 45 Article 26 personality 1 0.008403361 2.33537492 0.019624999 ## 46 Article 26 respect 1 0.008403361 2.33537492 0.019624999 ## 47 Article 26 that 1 0.008403361 2.33537492 0.019624999 ## 48 Article 26 their 1 0.008403361 2.33537492 0.019624999 ## 49 Article 26 at 1 0.008403361 2.04769284 0.017207503 ## 50 Article 26 development 1 0.008403361 2.04769284 0.017207503 ## 51 Article 26 it 1 0.008403361 2.04769284 0.017207503 ## 52 Article 26 united 1 0.008403361 2.04769284 0.017207503 ## 53 Article 26 3 1 0.008403361 1.82454929 0.015332347 ## 54 Article 26 full 1 0.008403361 1.82454929 0.015332347 ## 55 Article 26 and 7 0.058823529 0.25593337 0.015054904 ## 56 Article 26 freedoms 1 0.008403361 1.64222774 0.013800233 ## 57 Article 26 free 1 0.008403361 1.48807706 0.012504849 ## 58 Article 26 of 6 0.050420168 0.21511138 0.010845952 ## 59 Article 26 rights 1 0.008403361 1.03609193 0.008706655 ## 60 Article 26 the 10 0.084033613 0.10178269 0.008553168 ## 61 Article 26 1 1 0.008403361 0.86903785 0.007302839 ## 62 Article 26 2 1 0.008403361 0.86903785 0.007302839 ## 63 Article 26 a 1 0.008403361 0.86903785 0.007302839 ## 64 Article 26 right 2 0.016806723 0.38946477 0.006545626 ## 65 Article 26 or 1 0.008403361 0.72593700 0.006100311 ## 66 Article 26 in 1 0.008403361 0.54361545 0.004568197 ## 67 Article 26 to 6 0.050420168 0.06669137 0.003362590 ## 68 Article 26 has 1 0.008403361 0.38946477 0.003272813 ## 69 Article 26 everyone 1 0.008403361 0.29849299 0.002508344 We can use wordcloud to vizualize results — but they will not be too telling, if we use word frequencies. library(wordcloud) library(&quot;RColorBrewer&quot;) set.seed(1234) wordcloud(words=temp$WORD, freq=temp$n, min.freq = 1, rot.per = .0, random.order=FALSE, scale=c(10,.5), max.words=150, colors=brewer.pal(8, &quot;Dark2&quot;)) Instead we can use tf_idf values: set.seed(1234) wordcloud(words=temp$WORD, freq=temp$tf_idf, min.freq = 1, rot.per = .0, random.order=FALSE, scale=c(10,.5), max.words=150, colors=brewer.pal(8, &quot;Dark2&quot;)) 8.4.1 Inaugural speeches of the US presidents The quanteda package includes a corpus of presidential inaugural speeches. What did the presidenst speak about? For thoughts and ideas, take a look at what Google News Lab did with this data: http://inauguratespeeches.com/. You can find readable addresses here: https://www.presidency.ucsb.edu/documents/presidential-documents-archive-guidebook/inaugural-addresses. data(&quot;data_corpus_inaugural&quot;, package = &quot;quanteda&quot;) inaug_dfm &lt;- quanteda::dfm(data_corpus_inaugural, verbose = FALSE) ## Warning: &#39;dfm.corpus()&#39; is deprecated. Use &#39;tokens()&#39; first. head(inaug_dfm) ## Document-feature matrix of: 6 documents, 9,439 features (93.84% sparse) and 4 docvars. ## features ## docs fellow-citizens of the senate and house representatives : ## 1789-Washington 1 71 116 1 48 2 2 1 ## 1793-Washington 0 11 13 0 2 0 0 1 ## 1797-Adams 3 140 163 1 130 0 2 0 ## 1801-Jefferson 2 104 130 0 81 0 0 1 ## 1805-Jefferson 0 101 143 0 93 0 0 0 ## 1809-Madison 1 69 104 0 43 0 0 0 ## features ## docs among vicissitudes ## 1789-Washington 1 1 ## 1793-Washington 0 0 ## 1797-Adams 4 0 ## 1801-Jefferson 1 0 ## 1805-Jefferson 7 0 ## 1809-Madison 0 0 ## [ reached max_nfeat ... 9,429 more features ] The corpus is stored as a document-feature matrix, which we can convert into a more familiar tidy format in the following manner: inaug_td &lt;- tidy(inaug_dfm) head(inaug_td) ## # A tibble: 6 × 3 ## document term count ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 1789-Washington fellow-citizens 1 ## 2 1797-Adams fellow-citizens 3 ## 3 1801-Jefferson fellow-citizens 2 ## 4 1809-Madison fellow-citizens 1 ## 5 1813-Madison fellow-citizens 1 ## 6 1817-Monroe fellow-citizens 5 Using what you have learned so far, analyze speeches of American presidents: your code; you analysis; your observations… 8.5 Text summarization Before we proceed, let’s load some text. Below is an example of how you can load a text using its URL. However, be mindful about using this approach: it is convenient with a small number of short texts, but not efficient with large number of long texts. urlText &lt;- &quot;https://univie-histr-2020s.github.io/files/test_text.txt&quot; testText &lt;- scan(url(urlText), what=&quot;character&quot;, sep=&quot;\\n&quot;) We can use different algorithms to summarize texts, which in this context means extracting key sentences, whose keyness is calculated through different means. Library lexRankr used tf-idf values and some methods from social network analysis to identify the most central sentences in a text. (For technical details, see: https://cran.r-project.org/web/packages/lexRankr/lexRankr.pdf; for a detailed math description: http://www.cs.cmu.edu/afs/cs/project/jair/pub/volume22/erkan04a-html/erkan04a.html). Take a look at the summary and then at the full text! library(lexRankr) textToSummarize = testText summary = lexRank(textToSummarize, docId = rep(1, length(textToSummarize)), #repeat same docid for all of input vector n = 5, # number of sentences continuous = TRUE) ## Parsing text into sentences and tokens...DONE ## Calculating pairwise sentence similarities...DONE ## Applying LexRank...DONE ## Formatting Output...DONE # this is just preparing results for better viewing summary$sentenceId &lt;- str_replace_all(summary$sentenceId, &quot;\\\\d+_&quot;, &quot;&quot;) summary$sentenceId &lt;- as.numeric(summary$sentenceId) summary &lt;- summary %&gt;% arrange(sentenceId) summary$sentence ## [1] &quot;The Klimt University of Vienna Ceiling Paintings, also known as the Faculty Paintings, were a series of paintings made by Gustav Klimt for the ceiling of the University of Vienna`s Great Hall between the years of 1900–1907.&quot; ## [2] &quot;Upon presenting his paintings, Philosophy, Medicine and Jurisprudence, Klimt came under attack for `pornography` and `perverted excess` in the paintings.&quot; ## [3] &quot;Klimt described the painting as follows: `On the left a group of figures, the beginning of life, fruition, decay.&quot; ## [4] &quot;In 1903, Hermann Bahr, a writer and a supporter of Klimt, in response to the criticism of the Faculty Paintings compiled articles which attacked Klimt, and published a book Gegen Klimt (Against Klimt) with his foreword, where he argued that the reactions were absurd.&quot; ## [5] &quot;In 1911 Medicine and Jurisprudence were bought by Klimt`s friend and fellow artist, Koloman Moser.[clarification needed] Medicine eventually came into the possession of a Jewish family, and in 1938 the painting was seized by Germany.&quot; [1] &quot;The Klimt University of Vienna Ceiling Paintings, also known as the Faculty Paintings, were a series of paintings made by Gustav Klimt for the ceiling of the University of Vienna`s Great Hall between the years of 1900–1907.&quot; [2] &quot;Upon presenting his paintings, Philosophy, Medicine and Jurisprudence, Klimt came under attack for `pornography` and `perverted excess` in the paintings.&quot; [3] &quot;Klimt described the painting as follows: `On the left a group of figures, the beginning of life, fruition, decay.&quot; [4] &quot;In 1903, Hermann Bahr, a writer and a supporter of Klimt, in response to the criticism of the Faculty Paintings compiled articles which attacked Klimt, and published a book Gegen Klimt (Against Klimt) with his foreword, where he argued that the reactions were absurd.&quot; [5] &quot;In 1911 Medicine and Jurisprudence were bought by Klimt`s friend and fellow artist, Koloman Moser.[clarification needed] Medicine eventually came into the possession of a Jewish family, and in 1938 the painting was seized by Germany.&quot; Here is another corpus of articles to play with (from tm library): library(tm) data(&quot;acq&quot;) acqTidy &lt;- tidy(acq) Here is an article: item = 1 test &lt;- str_replace_all(acqTidy$text[item], &quot;\\\\s+&quot;, &quot; &quot;) test ## [1] &quot;Computer Terminal Systems Inc said it has completed the sale of 200,000 shares of its common stock, and warrants to acquire an additional one mln shares, to &lt;Sedio N.V.&gt; of Lugano, Switzerland for 50,000 dlrs. The company said the warrants are exercisable for five years at a purchase price of .125 dlrs per share. Computer Terminal said Sedio also has the right to buy additional shares and increase its total holdings up to 40 pct of the Computer Terminal&#39;s outstanding common stock under certain circumstances involving change of control at the company. The company said if the conditions occur the warrants would be exercisable at a price equal to 75 pct of its common stock&#39;s market price at the time, not to exceed 1.50 dlrs per share. Computer Terminal also said it sold the technolgy rights to its Dot Matrix impact technology, including any future improvements, to &lt;Woodco Inc&gt; of Houston, Tex. for 200,000 dlrs. But, it said it would continue to be the exclusive worldwide licensee of the technology for Woodco. The company said the moves were part of its reorganization plan and would help pay current operation costs and ensure product delivery. Computer Terminal makes computer generated labels, forms, tags and ticket printers and terminals. Reuter&quot; [1] &quot;Computer Terminal Systems Inc said it has completed the sale of 200,000 shares of its common stock, and warrants to acquire an additional one mln shares, to &lt;Sedio N.V.&gt; of Lugano, Switzerland for 50,000 dlrs. The company said the warrants are exercisable for five years at a purchase price of .125 dlrs per share. Computer Terminal said Sedio also has the right to buy additional shares and increase its total holdings up to 40 pct of the Computer Terminal&#39;s outstanding common stock under certain circumstances involving change of control at the company. The company said if the conditions occur the warrants would be exercisable at a price equal to 75 pct of its common stock&#39;s market price at the time, not to exceed 1.50 dlrs per share. Computer Terminal also said it sold the technolgy rights to its Dot Matrix impact technology, including any future improvements, to &lt;Woodco Inc&gt; of Houston, Tex. for 200,000 dlrs. But, it said it would continue to be the exclusive worldwide licensee of the technology for Woodco. The company said the moves were part of its reorganization plan and would help pay current operation costs and ensure product delivery. Computer Terminal makes computer generated labels, forms, tags and ticket printers and terminals. Reuter&quot; Let’s see how our summary comes out: textToSummarize = test summary = lexRank(textToSummarize, docId = rep(1, length(textToSummarize)), #repeat same docid for all of input vector n = 3, # number of sentences continuous = TRUE) ## Parsing text into sentences and tokens...DONE ## Calculating pairwise sentence similarities...DONE ## Applying LexRank...DONE ## Formatting Output...DONE # this is just preparing results for better viewing summary$sentenceId &lt;- str_replace_all(summary$sentenceId, &quot;\\\\d+_&quot;, &quot;&quot;) summary$sentenceId &lt;- as.numeric(summary$sentenceId) summary &lt;- summary %&gt;% arrange(sentenceId) summary$sentence ## [1] &quot;Computer Terminal Systems Inc said it has completed the sale of 200,000 shares of its common stock, and warrants to acquire an additional one mln shares, to &lt;Sedio N.V.&gt; of Lugano, Switzerland for 50,000 dlrs.&quot; ## [2] &quot;Computer Terminal said Sedio also has the right to buy additional shares and increase its total holdings up to 40 pct of the Computer Terminal&#39;s outstanding common stock under certain circumstances involving change of control at the company.&quot; ## [3] &quot;The company said if the conditions occur the warrants would be exercisable at a price equal to 75 pct of its common stock&#39;s market price at the time, not to exceed 1.50 dlrs per share.&quot; [1] &quot;Computer Terminal Systems Inc said it has completed the sale of 200,000 shares of its common stock, and warrants to acquire an additional one mln shares, to &lt;Sedio N.V.&gt; of Lugano, Switzerland for 50,000 dlrs.&quot; [2] &quot;Computer Terminal said Sedio also has the right to buy additional shares and increase its total holdings up to 40 pct of the Computer Terminal&#39;s outstanding common stock under certain circumstances involving change of control at the company.&quot; [3] &quot;The company said if the conditions occur the warrants would be exercisable at a price equal to 75 pct of its common stock&#39;s market price at the time, not to exceed 1.50 dlrs per share.&quot; Try this with other articles — and compare summaries with full versions. Share your observations. your code; your observations 8.6 Homework given in the chapter. 8.7 Submitting homework Homework assignment must be submitted by the beginning of the next class; Email your homework to the instructor as attachments. In the subject of your email, please, add the following: 57528-LXX-HW-YourLastName-YourMatriculationNumber, where LXX is the number of the lesson for which you submit homework; YourLastName is your last name; and YourMatriculationNumber is your matriculation number. "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
